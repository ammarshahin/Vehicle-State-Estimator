
SerialCommunication.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001494  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000022  00800060  00001494  00001528  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000026  00800082  00800082  0000154a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000154a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000157c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000348  00000000  00000000  000015b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000023ac  00000000  00000000  00001900  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e22  00000000  00000000  00003cac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000020bc  00000000  00000000  00004ace  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c9c  00000000  00000000  00006b8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001256  00000000  00000000  00007828  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001ac4  00000000  00000000  00008a7e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000270  00000000  00000000  0000a542  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 cd 07 	jmp	0xf9a	; 0xf9a <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 64 04 	jmp	0x8c8	; 0x8c8 <__vector_12>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e9       	ldi	r30, 0x94	; 148
      68:	f4 e1       	ldi	r31, 0x14	; 20
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 38       	cpi	r26, 0x82	; 130
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a2 e8       	ldi	r26, 0x82	; 130
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a8 3a       	cpi	r26, 0xA8	; 168
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 83 01 	call	0x306	; 0x306 <main>
      8a:	0c 94 48 0a 	jmp	0x1490	; 0x1490 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Measurement_Init>:

#define DELAY_TIME 500
#define TIME_FACTOR 0

void Measurement_Init()
{
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	cd b7       	in	r28, 0x3d	; 61
      98:	de b7       	in	r29, 0x3e	; 62
	Distance = FALSE;
      9a:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <Distance>
	Time_Delta = FALSE;
      9e:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <Time_Delta>
      a2:	10 92 92 00 	sts	0x0092, r1	; 0x800092 <Time_Delta+0x1>
      a6:	10 92 93 00 	sts	0x0093, r1	; 0x800093 <Time_Delta+0x2>
      aa:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <Time_Delta+0x3>
	Time_Init = FALSE;
      ae:	10 92 9a 00 	sts	0x009A, r1	; 0x80009a <Time_Init>
      b2:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <Time_Init+0x1>
      b6:	10 92 9c 00 	sts	0x009C, r1	; 0x80009c <Time_Init+0x2>
      ba:	10 92 9d 00 	sts	0x009D, r1	; 0x80009d <Time_Init+0x3>
	Count_Flag = FALSE;
      be:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <Count_Flag+0x1>
      c2:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <Count_Flag>
	Button_Flag = FALSE;
      c6:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <Button_Flag>
	Speed = FALSE;
      ca:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <Speed>
      ce:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <Speed+0x1>
      d2:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <Speed+0x2>
      d6:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <Speed+0x3>
	Time_Prev = FALSE;
      da:	10 92 96 00 	sts	0x0096, r1	; 0x800096 <Time_Prev>
      de:	10 92 97 00 	sts	0x0097, r1	; 0x800097 <Time_Prev+0x1>
      e2:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <Time_Prev+0x2>
      e6:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <Time_Prev+0x3>
	Time_Current = FALSE;
      ea:	10 92 9e 00 	sts	0x009E, r1	; 0x80009e <Time_Current>
      ee:	10 92 9f 00 	sts	0x009F, r1	; 0x80009f <Time_Current+0x1>
      f2:	10 92 a0 00 	sts	0x00A0, r1	; 0x8000a0 <Time_Current+0x2>
      f6:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <Time_Current+0x3>
	SPI_Init(&SPI_Cfg_s);
      fa:	80 e6       	ldi	r24, 0x60	; 96
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	0e 94 1f 03 	call	0x63e	; 0x63e <SPI_Init>
	UART_Init(&UART_Cfg_s);
     102:	84 e7       	ldi	r24, 0x74	; 116
     104:	90 e0       	ldi	r25, 0x00	; 0
     106:	0e 94 12 08 	call	0x1024	; 0x1024 <UART_Init>
	Timers_Init(&timer1_cfg_s);
     10a:	89 e6       	ldi	r24, 0x69	; 105
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <Timers_Init>
	pushButton_Init(pushButton0);
     112:	80 e1       	ldi	r24, 0x10	; 16
     114:	0e 94 22 01 	call	0x244	; 0x244 <pushButton_Init>
	pushButton_Init(pushButton1);
     118:	84 e0       	ldi	r24, 0x04	; 4
     11a:	0e 94 22 01 	call	0x244	; 0x244 <pushButton_Init>
}
     11e:	00 00       	nop
     120:	df 91       	pop	r29
     122:	cf 91       	pop	r28
     124:	08 95       	ret

00000126 <Measurement_Calc>:

void Measurement_Calc()
{
     126:	ef 92       	push	r14
     128:	ff 92       	push	r15
     12a:	0f 93       	push	r16
     12c:	1f 93       	push	r17
     12e:	cf 93       	push	r28
     130:	df 93       	push	r29
     132:	cd b7       	in	r28, 0x3d	; 61
     134:	de b7       	in	r29, 0x3e	; 62
	static uint8 Button_Flag2 = FALSE;
	if( pushButton_Get_Status(pushButton0))
     136:	80 e1       	ldi	r24, 0x10	; 16
     138:	0e 94 42 01 	call	0x284	; 0x284 <pushButton_Get_Status>
     13c:	88 23       	and	r24, r24
     13e:	19 f0       	breq	.+6      	; 0x146 <Measurement_Calc+0x20>
	{
		Button_Flag2 = TRUE;
     140:	81 e0       	ldi	r24, 0x01	; 1
     142:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <__data_end>
	}
	
	if( pushButton_Get_Status(pushButton1))
     146:	84 e0       	ldi	r24, 0x04	; 4
     148:	0e 94 42 01 	call	0x284	; 0x284 <pushButton_Get_Status>
     14c:	88 23       	and	r24, r24
     14e:	11 f0       	breq	.+4      	; 0x154 <Measurement_Calc+0x2e>
	{
		Button_Flag2 = FALSE;
     150:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__data_end>
	}
	
	if( Count_Flag  && Button_Flag2)
     154:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <Count_Flag>
     158:	90 91 88 00 	lds	r25, 0x0088	; 0x800088 <Count_Flag+0x1>
     15c:	89 2b       	or	r24, r25
     15e:	09 f4       	brne	.+2      	; 0x162 <Measurement_Calc+0x3c>
     160:	51 c0       	rjmp	.+162    	; 0x204 <Measurement_Calc+0xde>
     162:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <__data_end>
     166:	88 23       	and	r24, r24
     168:	09 f4       	brne	.+2      	; 0x16c <Measurement_Calc+0x46>
     16a:	4c c0       	rjmp	.+152    	; 0x204 <Measurement_Calc+0xde>
	{
		Time_Delta = Time_Current - Time_Prev;
     16c:	20 91 9e 00 	lds	r18, 0x009E	; 0x80009e <Time_Current>
     170:	30 91 9f 00 	lds	r19, 0x009F	; 0x80009f <Time_Current+0x1>
     174:	40 91 a0 00 	lds	r20, 0x00A0	; 0x8000a0 <Time_Current+0x2>
     178:	50 91 a1 00 	lds	r21, 0x00A1	; 0x8000a1 <Time_Current+0x3>
     17c:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <Time_Prev>
     180:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <Time_Prev+0x1>
     184:	a0 91 98 00 	lds	r26, 0x0098	; 0x800098 <Time_Prev+0x2>
     188:	b0 91 99 00 	lds	r27, 0x0099	; 0x800099 <Time_Prev+0x3>
     18c:	79 01       	movw	r14, r18
     18e:	8a 01       	movw	r16, r20
     190:	e8 1a       	sub	r14, r24
     192:	f9 0a       	sbc	r15, r25
     194:	0a 0b       	sbc	r16, r26
     196:	1b 0b       	sbc	r17, r27
     198:	d8 01       	movw	r26, r16
     19a:	c7 01       	movw	r24, r14
     19c:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <Time_Delta>
     1a0:	90 93 92 00 	sts	0x0092, r25	; 0x800092 <Time_Delta+0x1>
     1a4:	a0 93 93 00 	sts	0x0093, r26	; 0x800093 <Time_Delta+0x2>
     1a8:	b0 93 94 00 	sts	0x0094, r27	; 0x800094 <Time_Delta+0x3>
		Distance  += (Time_Delta * Speed);
     1ac:	20 91 91 00 	lds	r18, 0x0091	; 0x800091 <Time_Delta>
     1b0:	30 91 92 00 	lds	r19, 0x0092	; 0x800092 <Time_Delta+0x1>
     1b4:	40 91 93 00 	lds	r20, 0x0093	; 0x800093 <Time_Delta+0x2>
     1b8:	50 91 94 00 	lds	r21, 0x0094	; 0x800094 <Time_Delta+0x3>
     1bc:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <Speed>
     1c0:	90 91 84 00 	lds	r25, 0x0084	; 0x800084 <Speed+0x1>
     1c4:	a0 91 85 00 	lds	r26, 0x0085	; 0x800085 <Speed+0x2>
     1c8:	b0 91 86 00 	lds	r27, 0x0086	; 0x800086 <Speed+0x3>
     1cc:	bc 01       	movw	r22, r24
     1ce:	cd 01       	movw	r24, r26
     1d0:	0e 94 b3 09 	call	0x1366	; 0x1366 <__mulsi3>
     1d4:	dc 01       	movw	r26, r24
     1d6:	cb 01       	movw	r24, r22
     1d8:	98 2f       	mov	r25, r24
     1da:	80 91 95 00 	lds	r24, 0x0095	; 0x800095 <Distance>
     1de:	89 0f       	add	r24, r25
     1e0:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <Distance>
		Time_Prev = Time_Current;
     1e4:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <Time_Current>
     1e8:	90 91 9f 00 	lds	r25, 0x009F	; 0x80009f <Time_Current+0x1>
     1ec:	a0 91 a0 00 	lds	r26, 0x00A0	; 0x8000a0 <Time_Current+0x2>
     1f0:	b0 91 a1 00 	lds	r27, 0x00A1	; 0x8000a1 <Time_Current+0x3>
     1f4:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <Time_Prev>
     1f8:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <Time_Prev+0x1>
     1fc:	a0 93 98 00 	sts	0x0098, r26	; 0x800098 <Time_Prev+0x2>
     200:	b0 93 99 00 	sts	0x0099, r27	; 0x800099 <Time_Prev+0x3>
	}
}
     204:	00 00       	nop
     206:	df 91       	pop	r29
     208:	cf 91       	pop	r28
     20a:	1f 91       	pop	r17
     20c:	0f 91       	pop	r16
     20e:	ff 90       	pop	r15
     210:	ef 90       	pop	r14
     212:	08 95       	ret

00000214 <Measurement_Send>:

void Measurement_Send()
{
     214:	cf 93       	push	r28
     216:	df 93       	push	r29
     218:	cd b7       	in	r28, 0x3d	; 61
     21a:	de b7       	in	r29, 0x3e	; 62
	UART_SendToTTL(Distance);
     21c:	80 91 95 00 	lds	r24, 0x0095	; 0x800095 <Distance>
     220:	88 2f       	mov	r24, r24
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	a0 e0       	ldi	r26, 0x00	; 0
     226:	b0 e0       	ldi	r27, 0x00	; 0
     228:	bc 01       	movw	r22, r24
     22a:	cd 01       	movw	r24, r26
     22c:	0e 94 33 09 	call	0x1266	; 0x1266 <UART_SendToTTL>
	SwDelay_ms(DELAY_TIME);
     230:	64 ef       	ldi	r22, 0xF4	; 244
     232:	71 e0       	ldi	r23, 0x01	; 1
     234:	80 e0       	ldi	r24, 0x00	; 0
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	0e 94 77 09 	call	0x12ee	; 0x12ee <SwDelay_ms>
}
     23c:	00 00       	nop
     23e:	df 91       	pop	r29
     240:	cf 91       	pop	r28
     242:	08 95       	ret

00000244 <pushButton_Init>:
/**
 * Description: Function to Initiate the Push Button.
 * @param push_Button the number of the pushButton [pushButton0,pushButton1]
 */
void pushButton_Init(pushButton push_Button)
{
     244:	cf 93       	push	r28
     246:	df 93       	push	r29
     248:	1f 92       	push	r1
     24a:	cd b7       	in	r28, 0x3d	; 61
     24c:	de b7       	in	r29, 0x3e	; 62
     24e:	89 83       	std	Y+1, r24	; 0x01
	switch(push_Button)
     250:	89 81       	ldd	r24, Y+1	; 0x01
     252:	88 2f       	mov	r24, r24
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	84 30       	cpi	r24, 0x04	; 4
     258:	91 05       	cpc	r25, r1
     25a:	49 f0       	breq	.+18     	; 0x26e <pushButton_Init+0x2a>
     25c:	40 97       	sbiw	r24, 0x10	; 16
     25e:	09 f0       	breq	.+2      	; 0x262 <pushButton_Init+0x1e>
			break;
		case pushButton1 :
			Gpio_PinDirection(pushButton1_PORT,pushButton1_PIN,SET_IN);
			break;
	}
}
     260:	0c c0       	rjmp	.+24     	; 0x27a <pushButton_Init+0x36>
void pushButton_Init(pushButton push_Button)
{
	switch(push_Button)
	{
		case pushButton0 :
			Gpio_PinDirection(pushButton0_PORT,pushButton0_PIN,SET_IN);
     262:	40 e0       	ldi	r20, 0x00	; 0
     264:	64 e0       	ldi	r22, 0x04	; 4
     266:	82 e0       	ldi	r24, 0x02	; 2
     268:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <Gpio_PinDirection>
			break;
     26c:	06 c0       	rjmp	.+12     	; 0x27a <pushButton_Init+0x36>
		case pushButton1 :
			Gpio_PinDirection(pushButton1_PORT,pushButton1_PIN,SET_IN);
     26e:	40 e0       	ldi	r20, 0x00	; 0
     270:	62 e0       	ldi	r22, 0x02	; 2
     272:	81 e0       	ldi	r24, 0x01	; 1
     274:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <Gpio_PinDirection>
			break;
     278:	00 00       	nop
	}
}
     27a:	00 00       	nop
     27c:	0f 90       	pop	r0
     27e:	df 91       	pop	r29
     280:	cf 91       	pop	r28
     282:	08 95       	ret

00000284 <pushButton_Get_Status>:
 * Description: Function to get the status of the Push button(Value).
 * @param push_Button the number of the push button [pushButton0,pushButton1]
 * @return the value(state) of the push button
 */
uint8 pushButton_Get_Status(pushButton push_Button)
{
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	00 d0       	rcall	.+0      	; 0x28a <pushButton_Get_Status+0x6>
     28a:	00 d0       	rcall	.+0      	; 0x28c <pushButton_Get_Status+0x8>
     28c:	cd b7       	in	r28, 0x3d	; 61
     28e:	de b7       	in	r29, 0x3e	; 62
     290:	8c 83       	std	Y+4, r24	; 0x04
	sint8 result0 = NO_CHANGE,result1,result2;
     292:	8f ef       	ldi	r24, 0xFF	; 255
     294:	89 83       	std	Y+1, r24	; 0x01
	switch(push_Button)
     296:	8c 81       	ldd	r24, Y+4	; 0x04
     298:	88 2f       	mov	r24, r24
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	84 30       	cpi	r24, 0x04	; 4
     29e:	91 05       	cpc	r25, r1
     2a0:	b1 f0       	breq	.+44     	; 0x2ce <pushButton_Get_Status+0x4a>
     2a2:	40 97       	sbiw	r24, 0x10	; 16
     2a4:	41 f5       	brne	.+80     	; 0x2f6 <pushButton_Get_Status+0x72>
	{
		case pushButton0 :
			result1 = Gpio_PinRead(pushButton0_PORT,pushButton0_PIN);
     2a6:	64 e0       	ldi	r22, 0x04	; 4
     2a8:	82 e0       	ldi	r24, 0x02	; 2
     2aa:	0e 94 a8 02 	call	0x550	; 0x550 <Gpio_PinRead>
     2ae:	8a 83       	std	Y+2, r24	; 0x02
			result2 = Gpio_PinRead(pushButton0_PORT,pushButton0_PIN);
     2b0:	64 e0       	ldi	r22, 0x04	; 4
     2b2:	82 e0       	ldi	r24, 0x02	; 2
     2b4:	0e 94 a8 02 	call	0x550	; 0x550 <Gpio_PinRead>
     2b8:	8b 83       	std	Y+3, r24	; 0x03
			if(result1 == result2)
     2ba:	9a 81       	ldd	r25, Y+2	; 0x02
     2bc:	8b 81       	ldd	r24, Y+3	; 0x03
     2be:	98 17       	cp	r25, r24
     2c0:	19 f4       	brne	.+6      	; 0x2c8 <pushButton_Get_Status+0x44>
			{
				result0 = result1; 
     2c2:	8a 81       	ldd	r24, Y+2	; 0x02
     2c4:	89 83       	std	Y+1, r24	; 0x01
			}else
			{
				result0 = NO_CHANGE;
			}
			break;
     2c6:	17 c0       	rjmp	.+46     	; 0x2f6 <pushButton_Get_Status+0x72>
			if(result1 == result2)
			{
				result0 = result1; 
			}else
			{
				result0 = NO_CHANGE;
     2c8:	8f ef       	ldi	r24, 0xFF	; 255
     2ca:	89 83       	std	Y+1, r24	; 0x01
			}
			break;
     2cc:	14 c0       	rjmp	.+40     	; 0x2f6 <pushButton_Get_Status+0x72>
		case pushButton1 :
			result1 = Gpio_PinRead(pushButton1_PORT,pushButton1_PIN);
     2ce:	62 e0       	ldi	r22, 0x02	; 2
     2d0:	81 e0       	ldi	r24, 0x01	; 1
     2d2:	0e 94 a8 02 	call	0x550	; 0x550 <Gpio_PinRead>
     2d6:	8a 83       	std	Y+2, r24	; 0x02
			result2 = Gpio_PinRead(pushButton1_PORT,pushButton1_PIN);
     2d8:	62 e0       	ldi	r22, 0x02	; 2
     2da:	81 e0       	ldi	r24, 0x01	; 1
     2dc:	0e 94 a8 02 	call	0x550	; 0x550 <Gpio_PinRead>
     2e0:	8b 83       	std	Y+3, r24	; 0x03
			if(result1 == result2)
     2e2:	9a 81       	ldd	r25, Y+2	; 0x02
     2e4:	8b 81       	ldd	r24, Y+3	; 0x03
     2e6:	98 17       	cp	r25, r24
     2e8:	19 f4       	brne	.+6      	; 0x2f0 <pushButton_Get_Status+0x6c>
			{
				result0 = result1;
     2ea:	8a 81       	ldd	r24, Y+2	; 0x02
     2ec:	89 83       	std	Y+1, r24	; 0x01
			}else
			{
				result0 = NO_CHANGE;
			}
			break;
     2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <pushButton_Get_Status+0x70>
			if(result1 == result2)
			{
				result0 = result1;
			}else
			{
				result0 = NO_CHANGE;
     2f0:	8f ef       	ldi	r24, 0xFF	; 255
     2f2:	89 83       	std	Y+1, r24	; 0x01
			}
			break;
     2f4:	00 00       	nop
	}
	return result0;
     2f6:	89 81       	ldd	r24, Y+1	; 0x01
     2f8:	0f 90       	pop	r0
     2fa:	0f 90       	pop	r0
     2fc:	0f 90       	pop	r0
     2fe:	0f 90       	pop	r0
     300:	df 91       	pop	r29
     302:	cf 91       	pop	r28
     304:	08 95       	ret

00000306 <main>:
 * Author : Ammar Shahin
 */ 
#include "communication.h"

int main(void)
{
     306:	cf 93       	push	r28
     308:	df 93       	push	r29
     30a:	cd b7       	in	r28, 0x3d	; 61
     30c:	de b7       	in	r29, 0x3e	; 62
	Measurement_Init();
     30e:	0e 94 49 00 	call	0x92	; 0x92 <Measurement_Init>
	while (TRUE) 
    {
		Measurement_Calc();
     312:	0e 94 93 00 	call	0x126	; 0x126 <Measurement_Calc>
		Measurement_Send();
     316:	0e 94 0a 01 	call	0x214	; 0x214 <Measurement_Send>
	}
     31a:	fb cf       	rjmp	.-10     	; 0x312 <main+0xc>

0000031c <Gpio_PortDirection>:
		break;
		case MYPORTD :
		PORT_D ^= (pins);
		break;
	}
}
     31c:	cf 93       	push	r28
     31e:	df 93       	push	r29
     320:	00 d0       	rcall	.+0      	; 0x322 <Gpio_PortDirection+0x6>
     322:	cd b7       	in	r28, 0x3d	; 61
     324:	de b7       	in	r29, 0x3e	; 62
     326:	89 83       	std	Y+1, r24	; 0x01
     328:	6a 83       	std	Y+2, r22	; 0x02
     32a:	89 81       	ldd	r24, Y+1	; 0x01
     32c:	88 2f       	mov	r24, r24
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	81 30       	cpi	r24, 0x01	; 1
     332:	91 05       	cpc	r25, r1
     334:	91 f0       	breq	.+36     	; 0x35a <Gpio_PortDirection+0x3e>
     336:	82 30       	cpi	r24, 0x02	; 2
     338:	91 05       	cpc	r25, r1
     33a:	1c f4       	brge	.+6      	; 0x342 <Gpio_PortDirection+0x26>
     33c:	89 2b       	or	r24, r25
     33e:	39 f0       	breq	.+14     	; 0x34e <Gpio_PortDirection+0x32>
     340:	1e c0       	rjmp	.+60     	; 0x37e <Gpio_PortDirection+0x62>
     342:	82 30       	cpi	r24, 0x02	; 2
     344:	91 05       	cpc	r25, r1
     346:	79 f0       	breq	.+30     	; 0x366 <Gpio_PortDirection+0x4a>
     348:	03 97       	sbiw	r24, 0x03	; 3
     34a:	99 f0       	breq	.+38     	; 0x372 <Gpio_PortDirection+0x56>
     34c:	18 c0       	rjmp	.+48     	; 0x37e <Gpio_PortDirection+0x62>
     34e:	8a e3       	ldi	r24, 0x3A	; 58
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	2a 81       	ldd	r18, Y+2	; 0x02
     354:	fc 01       	movw	r30, r24
     356:	20 83       	st	Z, r18
     358:	12 c0       	rjmp	.+36     	; 0x37e <Gpio_PortDirection+0x62>
     35a:	87 e3       	ldi	r24, 0x37	; 55
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	2a 81       	ldd	r18, Y+2	; 0x02
     360:	fc 01       	movw	r30, r24
     362:	20 83       	st	Z, r18
     364:	0c c0       	rjmp	.+24     	; 0x37e <Gpio_PortDirection+0x62>
     366:	84 e3       	ldi	r24, 0x34	; 52
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	2a 81       	ldd	r18, Y+2	; 0x02
     36c:	fc 01       	movw	r30, r24
     36e:	20 83       	st	Z, r18
     370:	06 c0       	rjmp	.+12     	; 0x37e <Gpio_PortDirection+0x62>
     372:	81 e3       	ldi	r24, 0x31	; 49
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	2a 81       	ldd	r18, Y+2	; 0x02
     378:	fc 01       	movw	r30, r24
     37a:	20 83       	st	Z, r18
     37c:	00 00       	nop
     37e:	00 00       	nop
     380:	0f 90       	pop	r0
     382:	0f 90       	pop	r0
     384:	df 91       	pop	r29
     386:	cf 91       	pop	r28
     388:	08 95       	ret

0000038a <Gpio_PortWrite>:
     38a:	cf 93       	push	r28
     38c:	df 93       	push	r29
     38e:	00 d0       	rcall	.+0      	; 0x390 <Gpio_PortWrite+0x6>
     390:	cd b7       	in	r28, 0x3d	; 61
     392:	de b7       	in	r29, 0x3e	; 62
     394:	89 83       	std	Y+1, r24	; 0x01
     396:	6a 83       	std	Y+2, r22	; 0x02
     398:	89 81       	ldd	r24, Y+1	; 0x01
     39a:	88 2f       	mov	r24, r24
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	81 30       	cpi	r24, 0x01	; 1
     3a0:	91 05       	cpc	r25, r1
     3a2:	91 f0       	breq	.+36     	; 0x3c8 <Gpio_PortWrite+0x3e>
     3a4:	82 30       	cpi	r24, 0x02	; 2
     3a6:	91 05       	cpc	r25, r1
     3a8:	1c f4       	brge	.+6      	; 0x3b0 <Gpio_PortWrite+0x26>
     3aa:	89 2b       	or	r24, r25
     3ac:	39 f0       	breq	.+14     	; 0x3bc <Gpio_PortWrite+0x32>
     3ae:	1e c0       	rjmp	.+60     	; 0x3ec <Gpio_PortWrite+0x62>
     3b0:	82 30       	cpi	r24, 0x02	; 2
     3b2:	91 05       	cpc	r25, r1
     3b4:	79 f0       	breq	.+30     	; 0x3d4 <Gpio_PortWrite+0x4a>
     3b6:	03 97       	sbiw	r24, 0x03	; 3
     3b8:	99 f0       	breq	.+38     	; 0x3e0 <Gpio_PortWrite+0x56>
     3ba:	18 c0       	rjmp	.+48     	; 0x3ec <Gpio_PortWrite+0x62>
     3bc:	8b e3       	ldi	r24, 0x3B	; 59
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	2a 81       	ldd	r18, Y+2	; 0x02
     3c2:	fc 01       	movw	r30, r24
     3c4:	20 83       	st	Z, r18
     3c6:	12 c0       	rjmp	.+36     	; 0x3ec <Gpio_PortWrite+0x62>
     3c8:	88 e3       	ldi	r24, 0x38	; 56
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	2a 81       	ldd	r18, Y+2	; 0x02
     3ce:	fc 01       	movw	r30, r24
     3d0:	20 83       	st	Z, r18
     3d2:	0c c0       	rjmp	.+24     	; 0x3ec <Gpio_PortWrite+0x62>
     3d4:	85 e3       	ldi	r24, 0x35	; 53
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	2a 81       	ldd	r18, Y+2	; 0x02
     3da:	fc 01       	movw	r30, r24
     3dc:	20 83       	st	Z, r18
     3de:	06 c0       	rjmp	.+12     	; 0x3ec <Gpio_PortWrite+0x62>
     3e0:	82 e3       	ldi	r24, 0x32	; 50
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	2a 81       	ldd	r18, Y+2	; 0x02
     3e6:	fc 01       	movw	r30, r24
     3e8:	20 83       	st	Z, r18
     3ea:	00 00       	nop
     3ec:	00 00       	nop
     3ee:	0f 90       	pop	r0
     3f0:	0f 90       	pop	r0
     3f2:	df 91       	pop	r29
     3f4:	cf 91       	pop	r28
     3f6:	08 95       	ret

000003f8 <Gpio_PinDirection>:
     3f8:	cf 93       	push	r28
     3fa:	df 93       	push	r29
     3fc:	00 d0       	rcall	.+0      	; 0x3fe <Gpio_PinDirection+0x6>
     3fe:	1f 92       	push	r1
     400:	cd b7       	in	r28, 0x3d	; 61
     402:	de b7       	in	r29, 0x3e	; 62
     404:	89 83       	std	Y+1, r24	; 0x01
     406:	6a 83       	std	Y+2, r22	; 0x02
     408:	4b 83       	std	Y+3, r20	; 0x03
     40a:	89 81       	ldd	r24, Y+1	; 0x01
     40c:	88 2f       	mov	r24, r24
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	81 30       	cpi	r24, 0x01	; 1
     412:	91 05       	cpc	r25, r1
     414:	81 f1       	breq	.+96     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     416:	82 30       	cpi	r24, 0x02	; 2
     418:	91 05       	cpc	r25, r1
     41a:	1c f4       	brge	.+6      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     41c:	89 2b       	or	r24, r25
     41e:	49 f0       	breq	.+18     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     420:	90 c0       	rjmp	.+288    	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
     422:	82 30       	cpi	r24, 0x02	; 2
     424:	91 05       	cpc	r25, r1
     426:	09 f4       	brne	.+2      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     428:	48 c0       	rjmp	.+144    	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
     42a:	03 97       	sbiw	r24, 0x03	; 3
     42c:	09 f4       	brne	.+2      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
     42e:	67 c0       	rjmp	.+206    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
     430:	88 c0       	rjmp	.+272    	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
     432:	8b 81       	ldd	r24, Y+3	; 0x03
     434:	88 2f       	mov	r24, r24
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	00 97       	sbiw	r24, 0x00	; 0
     43a:	21 f0       	breq	.+8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     43c:	8f 3f       	cpi	r24, 0xFF	; 255
     43e:	91 05       	cpc	r25, r1
     440:	71 f0       	breq	.+28     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     442:	7f c0       	rjmp	.+254    	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
     444:	8a e3       	ldi	r24, 0x3A	; 58
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	2a e3       	ldi	r18, 0x3A	; 58
     44a:	30 e0       	ldi	r19, 0x00	; 0
     44c:	f9 01       	movw	r30, r18
     44e:	20 81       	ld	r18, Z
     450:	32 2f       	mov	r19, r18
     452:	2a 81       	ldd	r18, Y+2	; 0x02
     454:	20 95       	com	r18
     456:	23 23       	and	r18, r19
     458:	fc 01       	movw	r30, r24
     45a:	20 83       	st	Z, r18
     45c:	0b c0       	rjmp	.+22     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
     45e:	8a e3       	ldi	r24, 0x3A	; 58
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	2a e3       	ldi	r18, 0x3A	; 58
     464:	30 e0       	ldi	r19, 0x00	; 0
     466:	f9 01       	movw	r30, r18
     468:	30 81       	ld	r19, Z
     46a:	2a 81       	ldd	r18, Y+2	; 0x02
     46c:	23 2b       	or	r18, r19
     46e:	fc 01       	movw	r30, r24
     470:	20 83       	st	Z, r18
     472:	00 00       	nop
     474:	66 c0       	rjmp	.+204    	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
     476:	8b 81       	ldd	r24, Y+3	; 0x03
     478:	88 2f       	mov	r24, r24
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	00 97       	sbiw	r24, 0x00	; 0
     47e:	21 f0       	breq	.+8      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     480:	8f 3f       	cpi	r24, 0xFF	; 255
     482:	91 05       	cpc	r25, r1
     484:	71 f0       	breq	.+28     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
     486:	5d c0       	rjmp	.+186    	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
     488:	87 e3       	ldi	r24, 0x37	; 55
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	27 e3       	ldi	r18, 0x37	; 55
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	f9 01       	movw	r30, r18
     492:	20 81       	ld	r18, Z
     494:	32 2f       	mov	r19, r18
     496:	2a 81       	ldd	r18, Y+2	; 0x02
     498:	20 95       	com	r18
     49a:	23 23       	and	r18, r19
     49c:	fc 01       	movw	r30, r24
     49e:	20 83       	st	Z, r18
     4a0:	0b c0       	rjmp	.+22     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
     4a2:	87 e3       	ldi	r24, 0x37	; 55
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	27 e3       	ldi	r18, 0x37	; 55
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	f9 01       	movw	r30, r18
     4ac:	30 81       	ld	r19, Z
     4ae:	2a 81       	ldd	r18, Y+2	; 0x02
     4b0:	23 2b       	or	r18, r19
     4b2:	fc 01       	movw	r30, r24
     4b4:	20 83       	st	Z, r18
     4b6:	00 00       	nop
     4b8:	44 c0       	rjmp	.+136    	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
     4ba:	8b 81       	ldd	r24, Y+3	; 0x03
     4bc:	88 2f       	mov	r24, r24
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	00 97       	sbiw	r24, 0x00	; 0
     4c2:	21 f0       	breq	.+8      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
     4c4:	8f 3f       	cpi	r24, 0xFF	; 255
     4c6:	91 05       	cpc	r25, r1
     4c8:	71 f0       	breq	.+28     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
     4ca:	3b c0       	rjmp	.+118    	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
     4cc:	84 e3       	ldi	r24, 0x34	; 52
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	24 e3       	ldi	r18, 0x34	; 52
     4d2:	30 e0       	ldi	r19, 0x00	; 0
     4d4:	f9 01       	movw	r30, r18
     4d6:	20 81       	ld	r18, Z
     4d8:	32 2f       	mov	r19, r18
     4da:	2a 81       	ldd	r18, Y+2	; 0x02
     4dc:	20 95       	com	r18
     4de:	23 23       	and	r18, r19
     4e0:	fc 01       	movw	r30, r24
     4e2:	20 83       	st	Z, r18
     4e4:	0b c0       	rjmp	.+22     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
     4e6:	84 e3       	ldi	r24, 0x34	; 52
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	24 e3       	ldi	r18, 0x34	; 52
     4ec:	30 e0       	ldi	r19, 0x00	; 0
     4ee:	f9 01       	movw	r30, r18
     4f0:	30 81       	ld	r19, Z
     4f2:	2a 81       	ldd	r18, Y+2	; 0x02
     4f4:	23 2b       	or	r18, r19
     4f6:	fc 01       	movw	r30, r24
     4f8:	20 83       	st	Z, r18
     4fa:	00 00       	nop
     4fc:	22 c0       	rjmp	.+68     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
     4fe:	8b 81       	ldd	r24, Y+3	; 0x03
     500:	88 2f       	mov	r24, r24
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	00 97       	sbiw	r24, 0x00	; 0
     506:	21 f0       	breq	.+8      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
     508:	8f 3f       	cpi	r24, 0xFF	; 255
     50a:	91 05       	cpc	r25, r1
     50c:	71 f0       	breq	.+28     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
     50e:	18 c0       	rjmp	.+48     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     510:	81 e3       	ldi	r24, 0x31	; 49
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	21 e3       	ldi	r18, 0x31	; 49
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	f9 01       	movw	r30, r18
     51a:	20 81       	ld	r18, Z
     51c:	32 2f       	mov	r19, r18
     51e:	2a 81       	ldd	r18, Y+2	; 0x02
     520:	20 95       	com	r18
     522:	23 23       	and	r18, r19
     524:	fc 01       	movw	r30, r24
     526:	20 83       	st	Z, r18
     528:	0b c0       	rjmp	.+22     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     52a:	81 e3       	ldi	r24, 0x31	; 49
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	21 e3       	ldi	r18, 0x31	; 49
     530:	30 e0       	ldi	r19, 0x00	; 0
     532:	f9 01       	movw	r30, r18
     534:	30 81       	ld	r19, Z
     536:	2a 81       	ldd	r18, Y+2	; 0x02
     538:	23 2b       	or	r18, r19
     53a:	fc 01       	movw	r30, r24
     53c:	20 83       	st	Z, r18
     53e:	00 00       	nop
     540:	00 00       	nop
     542:	00 00       	nop
     544:	0f 90       	pop	r0
     546:	0f 90       	pop	r0
     548:	0f 90       	pop	r0
     54a:	df 91       	pop	r29
     54c:	cf 91       	pop	r28
     54e:	08 95       	ret

00000550 <Gpio_PinRead>:
 * @param port : the port that includes the pin {MYPORTA,MYPORTB,MYPORTC,MYPORTD}
 * @param pins : the pin Number {BIT0,BIT1,BIT2,BIT3,BIT4,BIT5,BIT6,BIT7}
 * Return : the value Read by the function 
 */
uint8 Gpio_PinRead(uint8 port, uint8 pin)
{
     550:	cf 93       	push	r28
     552:	df 93       	push	r29
     554:	00 d0       	rcall	.+0      	; 0x556 <Gpio_PinRead+0x6>
     556:	1f 92       	push	r1
     558:	cd b7       	in	r28, 0x3d	; 61
     55a:	de b7       	in	r29, 0x3e	; 62
     55c:	8a 83       	std	Y+2, r24	; 0x02
     55e:	6b 83       	std	Y+3, r22	; 0x03
	uint8 result = 0;
     560:	19 82       	std	Y+1, r1	; 0x01
	switch(port)
     562:	8a 81       	ldd	r24, Y+2	; 0x02
     564:	88 2f       	mov	r24, r24
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	81 30       	cpi	r24, 0x01	; 1
     56a:	91 05       	cpc	r25, r1
     56c:	e9 f0       	breq	.+58     	; 0x5a8 <Gpio_PinRead+0x58>
     56e:	82 30       	cpi	r24, 0x02	; 2
     570:	91 05       	cpc	r25, r1
     572:	1c f4       	brge	.+6      	; 0x57a <Gpio_PinRead+0x2a>
     574:	89 2b       	or	r24, r25
     576:	39 f0       	breq	.+14     	; 0x586 <Gpio_PinRead+0x36>
     578:	4a c0       	rjmp	.+148    	; 0x60e <Gpio_PinRead+0xbe>
     57a:	82 30       	cpi	r24, 0x02	; 2
     57c:	91 05       	cpc	r25, r1
     57e:	29 f1       	breq	.+74     	; 0x5ca <Gpio_PinRead+0x7a>
     580:	03 97       	sbiw	r24, 0x03	; 3
     582:	a1 f1       	breq	.+104    	; 0x5ec <Gpio_PinRead+0x9c>
     584:	44 c0       	rjmp	.+136    	; 0x60e <Gpio_PinRead+0xbe>
	{
		case MYPORTA :
		result = ((PIN_A >> pin) & 0x01);
     586:	89 e3       	ldi	r24, 0x39	; 57
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	fc 01       	movw	r30, r24
     58c:	80 81       	ld	r24, Z
     58e:	88 2f       	mov	r24, r24
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	2b 81       	ldd	r18, Y+3	; 0x03
     594:	22 2f       	mov	r18, r18
     596:	30 e0       	ldi	r19, 0x00	; 0
     598:	02 c0       	rjmp	.+4      	; 0x59e <Gpio_PinRead+0x4e>
     59a:	95 95       	asr	r25
     59c:	87 95       	ror	r24
     59e:	2a 95       	dec	r18
     5a0:	e2 f7       	brpl	.-8      	; 0x59a <Gpio_PinRead+0x4a>
     5a2:	81 70       	andi	r24, 0x01	; 1
     5a4:	89 83       	std	Y+1, r24	; 0x01
		break;
     5a6:	33 c0       	rjmp	.+102    	; 0x60e <Gpio_PinRead+0xbe>
		case MYPORTB :
		result = ((PIN_B >> pin) & 0x01);
     5a8:	86 e3       	ldi	r24, 0x36	; 54
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	fc 01       	movw	r30, r24
     5ae:	80 81       	ld	r24, Z
     5b0:	88 2f       	mov	r24, r24
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	2b 81       	ldd	r18, Y+3	; 0x03
     5b6:	22 2f       	mov	r18, r18
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <Gpio_PinRead+0x70>
     5bc:	95 95       	asr	r25
     5be:	87 95       	ror	r24
     5c0:	2a 95       	dec	r18
     5c2:	e2 f7       	brpl	.-8      	; 0x5bc <Gpio_PinRead+0x6c>
     5c4:	81 70       	andi	r24, 0x01	; 1
     5c6:	89 83       	std	Y+1, r24	; 0x01
		break;
     5c8:	22 c0       	rjmp	.+68     	; 0x60e <Gpio_PinRead+0xbe>
		case MYPORTC :
		result = ((PIN_C >> pin) & 0x01);
     5ca:	83 e3       	ldi	r24, 0x33	; 51
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	fc 01       	movw	r30, r24
     5d0:	80 81       	ld	r24, Z
     5d2:	88 2f       	mov	r24, r24
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	2b 81       	ldd	r18, Y+3	; 0x03
     5d8:	22 2f       	mov	r18, r18
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <Gpio_PinRead+0x92>
     5de:	95 95       	asr	r25
     5e0:	87 95       	ror	r24
     5e2:	2a 95       	dec	r18
     5e4:	e2 f7       	brpl	.-8      	; 0x5de <Gpio_PinRead+0x8e>
     5e6:	81 70       	andi	r24, 0x01	; 1
     5e8:	89 83       	std	Y+1, r24	; 0x01
		break;
     5ea:	11 c0       	rjmp	.+34     	; 0x60e <Gpio_PinRead+0xbe>
		case MYPORTD :
		result = ((PIN_D >> pin) & 0x01);
     5ec:	80 e3       	ldi	r24, 0x30	; 48
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	fc 01       	movw	r30, r24
     5f2:	80 81       	ld	r24, Z
     5f4:	88 2f       	mov	r24, r24
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	2b 81       	ldd	r18, Y+3	; 0x03
     5fa:	22 2f       	mov	r18, r18
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	02 c0       	rjmp	.+4      	; 0x604 <Gpio_PinRead+0xb4>
     600:	95 95       	asr	r25
     602:	87 95       	ror	r24
     604:	2a 95       	dec	r18
     606:	e2 f7       	brpl	.-8      	; 0x600 <Gpio_PinRead+0xb0>
     608:	81 70       	andi	r24, 0x01	; 1
     60a:	89 83       	std	Y+1, r24	; 0x01
		break;
     60c:	00 00       	nop
	}
	return result;
     60e:	89 81       	ldd	r24, Y+1	; 0x01
}
     610:	0f 90       	pop	r0
     612:	0f 90       	pop	r0
     614:	0f 90       	pop	r0
     616:	df 91       	pop	r29
     618:	cf 91       	pop	r28
     61a:	08 95       	ret

0000061c <Interrupts_On>:
 * Description : This function is used to turn On the global interrupt mask
 * Return : the function Returns nothing
 */

void Interrupts_On(void)
{     
     61c:	cf 93       	push	r28
     61e:	df 93       	push	r29
     620:	cd b7       	in	r28, 0x3d	; 61
     622:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,GIE);
     624:	8f e5       	ldi	r24, 0x5F	; 95
     626:	90 e0       	ldi	r25, 0x00	; 0
     628:	2f e5       	ldi	r18, 0x5F	; 95
     62a:	30 e0       	ldi	r19, 0x00	; 0
     62c:	f9 01       	movw	r30, r18
     62e:	20 81       	ld	r18, Z
     630:	20 68       	ori	r18, 0x80	; 128
     632:	fc 01       	movw	r30, r24
     634:	20 83       	st	Z, r18
}
     636:	00 00       	nop
     638:	df 91       	pop	r29
     63a:	cf 91       	pop	r28
     63c:	08 95       	ret

0000063e <SPI_Init>:
 */
uint8 SPI_Receive()
{
	while(GET_BIT(SPI_SPSR,SPIF) == FALSE);
	return SPI_SPDR;
}
     63e:	cf 93       	push	r28
     640:	df 93       	push	r29
     642:	00 d0       	rcall	.+0      	; 0x644 <SPI_Init+0x6>
     644:	1f 92       	push	r1
     646:	cd b7       	in	r28, 0x3d	; 61
     648:	de b7       	in	r29, 0x3e	; 62
     64a:	9b 83       	std	Y+3, r25	; 0x03
     64c:	8a 83       	std	Y+2, r24	; 0x02
     64e:	81 e0       	ldi	r24, 0x01	; 1
     650:	89 83       	std	Y+1, r24	; 0x01
     652:	8a 81       	ldd	r24, Y+2	; 0x02
     654:	9b 81       	ldd	r25, Y+3	; 0x03
     656:	fc 01       	movw	r30, r24
     658:	80 81       	ld	r24, Z
     65a:	88 2f       	mov	r24, r24
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	00 97       	sbiw	r24, 0x00	; 0
     660:	d9 f0       	breq	.+54     	; 0x698 <SPI_Init+0x5a>
     662:	01 97       	sbiw	r24, 0x01	; 1
     664:	41 f5       	brne	.+80     	; 0x6b6 <SPI_Init+0x78>
     666:	4f ef       	ldi	r20, 0xFF	; 255
     668:	60 e1       	ldi	r22, 0x10	; 16
     66a:	81 e0       	ldi	r24, 0x01	; 1
     66c:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <Gpio_PinDirection>
     670:	4f ef       	ldi	r20, 0xFF	; 255
     672:	60 e2       	ldi	r22, 0x20	; 32
     674:	81 e0       	ldi	r24, 0x01	; 1
     676:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <Gpio_PinDirection>
     67a:	4f ef       	ldi	r20, 0xFF	; 255
     67c:	60 e8       	ldi	r22, 0x80	; 128
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <Gpio_PinDirection>
     684:	8d e2       	ldi	r24, 0x2D	; 45
     686:	90 e0       	ldi	r25, 0x00	; 0
     688:	2d e2       	ldi	r18, 0x2D	; 45
     68a:	30 e0       	ldi	r19, 0x00	; 0
     68c:	f9 01       	movw	r30, r18
     68e:	20 81       	ld	r18, Z
     690:	20 61       	ori	r18, 0x10	; 16
     692:	fc 01       	movw	r30, r24
     694:	20 83       	st	Z, r18
     696:	11 c0       	rjmp	.+34     	; 0x6ba <SPI_Init+0x7c>
     698:	4f ef       	ldi	r20, 0xFF	; 255
     69a:	60 e4       	ldi	r22, 0x40	; 64
     69c:	81 e0       	ldi	r24, 0x01	; 1
     69e:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <Gpio_PinDirection>
     6a2:	8d e2       	ldi	r24, 0x2D	; 45
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	2d e2       	ldi	r18, 0x2D	; 45
     6a8:	30 e0       	ldi	r19, 0x00	; 0
     6aa:	f9 01       	movw	r30, r18
     6ac:	20 81       	ld	r18, Z
     6ae:	2f 7e       	andi	r18, 0xEF	; 239
     6b0:	fc 01       	movw	r30, r24
     6b2:	20 83       	st	Z, r18
     6b4:	02 c0       	rjmp	.+4      	; 0x6ba <SPI_Init+0x7c>
     6b6:	19 82       	std	Y+1, r1	; 0x01
     6b8:	00 00       	nop
     6ba:	8a 81       	ldd	r24, Y+2	; 0x02
     6bc:	9b 81       	ldd	r25, Y+3	; 0x03
     6be:	fc 01       	movw	r30, r24
     6c0:	81 81       	ldd	r24, Z+1	; 0x01
     6c2:	88 2f       	mov	r24, r24
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	00 97       	sbiw	r24, 0x00	; 0
     6c8:	19 f0       	breq	.+6      	; 0x6d0 <SPI_Init+0x92>
     6ca:	01 97       	sbiw	r24, 0x01	; 1
     6cc:	59 f0       	breq	.+22     	; 0x6e4 <SPI_Init+0xa6>
     6ce:	14 c0       	rjmp	.+40     	; 0x6f8 <SPI_Init+0xba>
     6d0:	8d e2       	ldi	r24, 0x2D	; 45
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	2d e2       	ldi	r18, 0x2D	; 45
     6d6:	30 e0       	ldi	r19, 0x00	; 0
     6d8:	f9 01       	movw	r30, r18
     6da:	20 81       	ld	r18, Z
     6dc:	27 7f       	andi	r18, 0xF7	; 247
     6de:	fc 01       	movw	r30, r24
     6e0:	20 83       	st	Z, r18
     6e2:	0c c0       	rjmp	.+24     	; 0x6fc <SPI_Init+0xbe>
     6e4:	8d e2       	ldi	r24, 0x2D	; 45
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	2d e2       	ldi	r18, 0x2D	; 45
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	f9 01       	movw	r30, r18
     6ee:	20 81       	ld	r18, Z
     6f0:	28 60       	ori	r18, 0x08	; 8
     6f2:	fc 01       	movw	r30, r24
     6f4:	20 83       	st	Z, r18
     6f6:	02 c0       	rjmp	.+4      	; 0x6fc <SPI_Init+0xbe>
     6f8:	19 82       	std	Y+1, r1	; 0x01
     6fa:	00 00       	nop
     6fc:	8a 81       	ldd	r24, Y+2	; 0x02
     6fe:	9b 81       	ldd	r25, Y+3	; 0x03
     700:	fc 01       	movw	r30, r24
     702:	82 81       	ldd	r24, Z+2	; 0x02
     704:	88 2f       	mov	r24, r24
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	00 97       	sbiw	r24, 0x00	; 0
     70a:	71 f0       	breq	.+28     	; 0x728 <SPI_Init+0xea>
     70c:	01 97       	sbiw	r24, 0x01	; 1
     70e:	b1 f4       	brne	.+44     	; 0x73c <SPI_Init+0xfe>
     710:	8d e2       	ldi	r24, 0x2D	; 45
     712:	90 e0       	ldi	r25, 0x00	; 0
     714:	2d e2       	ldi	r18, 0x2D	; 45
     716:	30 e0       	ldi	r19, 0x00	; 0
     718:	f9 01       	movw	r30, r18
     71a:	20 81       	ld	r18, Z
     71c:	20 68       	ori	r18, 0x80	; 128
     71e:	fc 01       	movw	r30, r24
     720:	20 83       	st	Z, r18
     722:	0e 94 0e 03 	call	0x61c	; 0x61c <Interrupts_On>
     726:	0c c0       	rjmp	.+24     	; 0x740 <SPI_Init+0x102>
     728:	8d e2       	ldi	r24, 0x2D	; 45
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	2d e2       	ldi	r18, 0x2D	; 45
     72e:	30 e0       	ldi	r19, 0x00	; 0
     730:	f9 01       	movw	r30, r18
     732:	20 81       	ld	r18, Z
     734:	2f 77       	andi	r18, 0x7F	; 127
     736:	fc 01       	movw	r30, r24
     738:	20 83       	st	Z, r18
     73a:	02 c0       	rjmp	.+4      	; 0x740 <SPI_Init+0x102>
     73c:	19 82       	std	Y+1, r1	; 0x01
     73e:	00 00       	nop
     740:	8a 81       	ldd	r24, Y+2	; 0x02
     742:	9b 81       	ldd	r25, Y+3	; 0x03
     744:	fc 01       	movw	r30, r24
     746:	83 81       	ldd	r24, Z+3	; 0x03
     748:	88 2f       	mov	r24, r24
     74a:	90 e0       	ldi	r25, 0x00	; 0
     74c:	00 97       	sbiw	r24, 0x00	; 0
     74e:	19 f0       	breq	.+6      	; 0x756 <SPI_Init+0x118>
     750:	01 97       	sbiw	r24, 0x01	; 1
     752:	59 f0       	breq	.+22     	; 0x76a <SPI_Init+0x12c>
     754:	14 c0       	rjmp	.+40     	; 0x77e <SPI_Init+0x140>
     756:	8d e2       	ldi	r24, 0x2D	; 45
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	2d e2       	ldi	r18, 0x2D	; 45
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	f9 01       	movw	r30, r18
     760:	20 81       	ld	r18, Z
     762:	2f 7d       	andi	r18, 0xDF	; 223
     764:	fc 01       	movw	r30, r24
     766:	20 83       	st	Z, r18
     768:	0c c0       	rjmp	.+24     	; 0x782 <SPI_Init+0x144>
     76a:	8d e2       	ldi	r24, 0x2D	; 45
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	2d e2       	ldi	r18, 0x2D	; 45
     770:	30 e0       	ldi	r19, 0x00	; 0
     772:	f9 01       	movw	r30, r18
     774:	20 81       	ld	r18, Z
     776:	20 62       	ori	r18, 0x20	; 32
     778:	fc 01       	movw	r30, r24
     77a:	20 83       	st	Z, r18
     77c:	02 c0       	rjmp	.+4      	; 0x782 <SPI_Init+0x144>
     77e:	19 82       	std	Y+1, r1	; 0x01
     780:	00 00       	nop
     782:	8a 81       	ldd	r24, Y+2	; 0x02
     784:	9b 81       	ldd	r25, Y+3	; 0x03
     786:	fc 01       	movw	r30, r24
     788:	84 81       	ldd	r24, Z+4	; 0x04
     78a:	88 2f       	mov	r24, r24
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	00 97       	sbiw	r24, 0x00	; 0
     790:	19 f0       	breq	.+6      	; 0x798 <SPI_Init+0x15a>
     792:	01 97       	sbiw	r24, 0x01	; 1
     794:	59 f0       	breq	.+22     	; 0x7ac <SPI_Init+0x16e>
     796:	14 c0       	rjmp	.+40     	; 0x7c0 <SPI_Init+0x182>
     798:	8d e2       	ldi	r24, 0x2D	; 45
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	2d e2       	ldi	r18, 0x2D	; 45
     79e:	30 e0       	ldi	r19, 0x00	; 0
     7a0:	f9 01       	movw	r30, r18
     7a2:	20 81       	ld	r18, Z
     7a4:	2b 7f       	andi	r18, 0xFB	; 251
     7a6:	fc 01       	movw	r30, r24
     7a8:	20 83       	st	Z, r18
     7aa:	0c c0       	rjmp	.+24     	; 0x7c4 <SPI_Init+0x186>
     7ac:	8d e2       	ldi	r24, 0x2D	; 45
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	2d e2       	ldi	r18, 0x2D	; 45
     7b2:	30 e0       	ldi	r19, 0x00	; 0
     7b4:	f9 01       	movw	r30, r18
     7b6:	20 81       	ld	r18, Z
     7b8:	24 60       	ori	r18, 0x04	; 4
     7ba:	fc 01       	movw	r30, r24
     7bc:	20 83       	st	Z, r18
     7be:	02 c0       	rjmp	.+4      	; 0x7c4 <SPI_Init+0x186>
     7c0:	19 82       	std	Y+1, r1	; 0x01
     7c2:	00 00       	nop
     7c4:	8a 81       	ldd	r24, Y+2	; 0x02
     7c6:	9b 81       	ldd	r25, Y+3	; 0x03
     7c8:	fc 01       	movw	r30, r24
     7ca:	85 81       	ldd	r24, Z+5	; 0x05
     7cc:	88 2f       	mov	r24, r24
     7ce:	90 e0       	ldi	r25, 0x00	; 0
     7d0:	81 30       	cpi	r24, 0x01	; 1
     7d2:	91 05       	cpc	r25, r1
     7d4:	f9 f0       	breq	.+62     	; 0x814 <SPI_Init+0x1d6>
     7d6:	82 30       	cpi	r24, 0x02	; 2
     7d8:	91 05       	cpc	r25, r1
     7da:	1c f4       	brge	.+6      	; 0x7e2 <SPI_Init+0x1a4>
     7dc:	89 2b       	or	r24, r25
     7de:	39 f0       	breq	.+14     	; 0x7ee <SPI_Init+0x1b0>
     7e0:	52 c0       	rjmp	.+164    	; 0x886 <__stack+0x27>
     7e2:	82 30       	cpi	r24, 0x02	; 2
     7e4:	91 05       	cpc	r25, r1
     7e6:	49 f1       	breq	.+82     	; 0x83a <SPI_Init+0x1fc>
     7e8:	03 97       	sbiw	r24, 0x03	; 3
     7ea:	d1 f1       	breq	.+116    	; 0x860 <__stack+0x1>
     7ec:	4c c0       	rjmp	.+152    	; 0x886 <__stack+0x27>
     7ee:	8d e2       	ldi	r24, 0x2D	; 45
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	2d e2       	ldi	r18, 0x2D	; 45
     7f4:	30 e0       	ldi	r19, 0x00	; 0
     7f6:	f9 01       	movw	r30, r18
     7f8:	20 81       	ld	r18, Z
     7fa:	2e 7f       	andi	r18, 0xFE	; 254
     7fc:	fc 01       	movw	r30, r24
     7fe:	20 83       	st	Z, r18
     800:	8d e2       	ldi	r24, 0x2D	; 45
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	2d e2       	ldi	r18, 0x2D	; 45
     806:	30 e0       	ldi	r19, 0x00	; 0
     808:	f9 01       	movw	r30, r18
     80a:	20 81       	ld	r18, Z
     80c:	2d 7f       	andi	r18, 0xFD	; 253
     80e:	fc 01       	movw	r30, r24
     810:	20 83       	st	Z, r18
     812:	3b c0       	rjmp	.+118    	; 0x88a <__stack+0x2b>
     814:	8d e2       	ldi	r24, 0x2D	; 45
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	2d e2       	ldi	r18, 0x2D	; 45
     81a:	30 e0       	ldi	r19, 0x00	; 0
     81c:	f9 01       	movw	r30, r18
     81e:	20 81       	ld	r18, Z
     820:	21 60       	ori	r18, 0x01	; 1
     822:	fc 01       	movw	r30, r24
     824:	20 83       	st	Z, r18
     826:	8d e2       	ldi	r24, 0x2D	; 45
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	2d e2       	ldi	r18, 0x2D	; 45
     82c:	30 e0       	ldi	r19, 0x00	; 0
     82e:	f9 01       	movw	r30, r18
     830:	20 81       	ld	r18, Z
     832:	2d 7f       	andi	r18, 0xFD	; 253
     834:	fc 01       	movw	r30, r24
     836:	20 83       	st	Z, r18
     838:	28 c0       	rjmp	.+80     	; 0x88a <__stack+0x2b>
     83a:	8d e2       	ldi	r24, 0x2D	; 45
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	2d e2       	ldi	r18, 0x2D	; 45
     840:	30 e0       	ldi	r19, 0x00	; 0
     842:	f9 01       	movw	r30, r18
     844:	20 81       	ld	r18, Z
     846:	2e 7f       	andi	r18, 0xFE	; 254
     848:	fc 01       	movw	r30, r24
     84a:	20 83       	st	Z, r18
     84c:	8d e2       	ldi	r24, 0x2D	; 45
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	2d e2       	ldi	r18, 0x2D	; 45
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	f9 01       	movw	r30, r18
     856:	20 81       	ld	r18, Z
     858:	22 60       	ori	r18, 0x02	; 2
     85a:	fc 01       	movw	r30, r24
     85c:	20 83       	st	Z, r18
     85e:	15 c0       	rjmp	.+42     	; 0x88a <__stack+0x2b>
     860:	8d e2       	ldi	r24, 0x2D	; 45
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	2d e2       	ldi	r18, 0x2D	; 45
     866:	30 e0       	ldi	r19, 0x00	; 0
     868:	f9 01       	movw	r30, r18
     86a:	20 81       	ld	r18, Z
     86c:	21 60       	ori	r18, 0x01	; 1
     86e:	fc 01       	movw	r30, r24
     870:	20 83       	st	Z, r18
     872:	8d e2       	ldi	r24, 0x2D	; 45
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	2d e2       	ldi	r18, 0x2D	; 45
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	f9 01       	movw	r30, r18
     87c:	20 81       	ld	r18, Z
     87e:	22 60       	ori	r18, 0x02	; 2
     880:	fc 01       	movw	r30, r24
     882:	20 83       	st	Z, r18
     884:	02 c0       	rjmp	.+4      	; 0x88a <__stack+0x2b>
     886:	19 82       	std	Y+1, r1	; 0x01
     888:	00 00       	nop
     88a:	8d e2       	ldi	r24, 0x2D	; 45
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	2d e2       	ldi	r18, 0x2D	; 45
     890:	30 e0       	ldi	r19, 0x00	; 0
     892:	f9 01       	movw	r30, r18
     894:	20 81       	ld	r18, Z
     896:	20 64       	ori	r18, 0x40	; 64
     898:	fc 01       	movw	r30, r24
     89a:	20 83       	st	Z, r18
     89c:	6f ef       	ldi	r22, 0xFF	; 255
     89e:	80 e0       	ldi	r24, 0x00	; 0
     8a0:	0e 94 8e 01 	call	0x31c	; 0x31c <Gpio_PortDirection>
     8a4:	89 81       	ldd	r24, Y+1	; 0x01
     8a6:	0f 90       	pop	r0
     8a8:	0f 90       	pop	r0
     8aa:	0f 90       	pop	r0
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	08 95       	ret

000008b2 <SPI_Read>:
 * Description: this function is to Receive a data by the SPI 
 * @param data the symbol to be sent
 * @return the Received data
 */
uint8 SPI_Read()
{
     8b2:	cf 93       	push	r28
     8b4:	df 93       	push	r29
     8b6:	cd b7       	in	r28, 0x3d	; 61
     8b8:	de b7       	in	r29, 0x3e	; 62
	return SPI_SPDR;
     8ba:	8f e2       	ldi	r24, 0x2F	; 47
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	fc 01       	movw	r30, r24
     8c0:	80 81       	ld	r24, Z
}
     8c2:	df 91       	pop	r29
     8c4:	cf 91       	pop	r28
     8c6:	08 95       	ret

000008c8 <__vector_12>:


ISR_T(SPI_STC_vect)
{
     8c8:	1f 92       	push	r1
     8ca:	0f 92       	push	r0
     8cc:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     8d0:	0f 92       	push	r0
     8d2:	11 24       	eor	r1, r1
     8d4:	2f 93       	push	r18
     8d6:	3f 93       	push	r19
     8d8:	4f 93       	push	r20
     8da:	5f 93       	push	r21
     8dc:	6f 93       	push	r22
     8de:	7f 93       	push	r23
     8e0:	8f 93       	push	r24
     8e2:	9f 93       	push	r25
     8e4:	af 93       	push	r26
     8e6:	bf 93       	push	r27
     8e8:	ef 93       	push	r30
     8ea:	ff 93       	push	r31
     8ec:	cf 93       	push	r28
     8ee:	df 93       	push	r29
     8f0:	cd b7       	in	r28, 0x3d	; 61
     8f2:	de b7       	in	r29, 0x3e	; 62
	Recived = SPI_Read();
     8f4:	0e 94 59 04 	call	0x8b2	; 0x8b2 <SPI_Read>
     8f8:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <Recived>
	Gpio_PortWrite(MYPORTA,Recived);
     8fc:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <Recived>
     900:	68 2f       	mov	r22, r24
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	0e 94 c5 01 	call	0x38a	; 0x38a <Gpio_PortWrite>
	
	if(Count_Flag == 0)
     908:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <Count_Flag>
     90c:	90 91 88 00 	lds	r25, 0x0088	; 0x800088 <Count_Flag+0x1>
     910:	89 2b       	or	r24, r25
     912:	b9 f5       	brne	.+110    	; 0x982 <__vector_12+0xba>
	{
	Time_Init = Recived ;//* pow(10,Count_Flag) );
     914:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <Recived>
     918:	88 2f       	mov	r24, r24
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	a0 e0       	ldi	r26, 0x00	; 0
     91e:	b0 e0       	ldi	r27, 0x00	; 0
     920:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <Time_Init>
     924:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <Time_Init+0x1>
     928:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <Time_Init+0x2>
     92c:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <Time_Init+0x3>
	Count_Flag = 1;
     930:	81 e0       	ldi	r24, 0x01	; 1
     932:	90 e0       	ldi	r25, 0x00	; 0
     934:	90 93 88 00 	sts	0x0088, r25	; 0x800088 <Count_Flag+0x1>
     938:	80 93 87 00 	sts	0x0087, r24	; 0x800087 <Count_Flag>
	Timers_Start(TIMER1);
     93c:	81 e0       	ldi	r24, 0x01	; 1
     93e:	0e 94 90 07 	call	0xf20	; 0xf20 <Timers_Start>
	Time_Prev = Time_Init;
     942:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <Time_Init>
     946:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <Time_Init+0x1>
     94a:	a0 91 9c 00 	lds	r26, 0x009C	; 0x80009c <Time_Init+0x2>
     94e:	b0 91 9d 00 	lds	r27, 0x009D	; 0x80009d <Time_Init+0x3>
     952:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <Time_Prev>
     956:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <Time_Prev+0x1>
     95a:	a0 93 98 00 	sts	0x0098, r26	; 0x800098 <Time_Prev+0x2>
     95e:	b0 93 99 00 	sts	0x0099, r27	; 0x800099 <Time_Prev+0x3>
	Time_Current = Time_Init;
     962:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <Time_Init>
     966:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <Time_Init+0x1>
     96a:	a0 91 9c 00 	lds	r26, 0x009C	; 0x80009c <Time_Init+0x2>
     96e:	b0 91 9d 00 	lds	r27, 0x009D	; 0x80009d <Time_Init+0x3>
     972:	80 93 9e 00 	sts	0x009E, r24	; 0x80009e <Time_Current>
     976:	90 93 9f 00 	sts	0x009F, r25	; 0x80009f <Time_Current+0x1>
     97a:	a0 93 a0 00 	sts	0x00A0, r26	; 0x8000a0 <Time_Current+0x2>
     97e:	b0 93 a1 00 	sts	0x00A1, r27	; 0x8000a1 <Time_Current+0x3>
	}
	Speed = Recived;
     982:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <Recived>
     986:	88 2f       	mov	r24, r24
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	a0 e0       	ldi	r26, 0x00	; 0
     98c:	b0 e0       	ldi	r27, 0x00	; 0
     98e:	80 93 83 00 	sts	0x0083, r24	; 0x800083 <Speed>
     992:	90 93 84 00 	sts	0x0084, r25	; 0x800084 <Speed+0x1>
     996:	a0 93 85 00 	sts	0x0085, r26	; 0x800085 <Speed+0x2>
     99a:	b0 93 86 00 	sts	0x0086, r27	; 0x800086 <Speed+0x3>
	//else
	//{
		//Speed_Flag = 3;
	//}	
	
     99e:	00 00       	nop
     9a0:	df 91       	pop	r29
     9a2:	cf 91       	pop	r28
     9a4:	ff 91       	pop	r31
     9a6:	ef 91       	pop	r30
     9a8:	bf 91       	pop	r27
     9aa:	af 91       	pop	r26
     9ac:	9f 91       	pop	r25
     9ae:	8f 91       	pop	r24
     9b0:	7f 91       	pop	r23
     9b2:	6f 91       	pop	r22
     9b4:	5f 91       	pop	r21
     9b6:	4f 91       	pop	r20
     9b8:	3f 91       	pop	r19
     9ba:	2f 91       	pop	r18
     9bc:	0f 90       	pop	r0
     9be:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     9c2:	0f 90       	pop	r0
     9c4:	1f 90       	pop	r1
     9c6:	18 95       	reti

000009c8 <Timers_Init>:
	{
		Gpio_PinWrite(SWPWM_2_PORT,SWPWM_2_PIN,TRUE);
		Timers_timer2_Delay_ns(time_On_ns);
		Gpio_PinWrite(SWPWM_2_PORT,SWPWM_2_PIN,FALSE);
		Timers_timer2_Delay_ns(time_Off_ns);
	}
     9c8:	cf 93       	push	r28
     9ca:	df 93       	push	r29
     9cc:	00 d0       	rcall	.+0      	; 0x9ce <Timers_Init+0x6>
     9ce:	1f 92       	push	r1
     9d0:	cd b7       	in	r28, 0x3d	; 61
     9d2:	de b7       	in	r29, 0x3e	; 62
     9d4:	9b 83       	std	Y+3, r25	; 0x03
     9d6:	8a 83       	std	Y+2, r24	; 0x02
     9d8:	19 82       	std	Y+1, r1	; 0x01
     9da:	8a 81       	ldd	r24, Y+2	; 0x02
     9dc:	9b 81       	ldd	r25, Y+3	; 0x03
     9de:	fc 01       	movw	r30, r24
     9e0:	87 81       	ldd	r24, Z+7	; 0x07
     9e2:	90 85       	ldd	r25, Z+8	; 0x08
     9e4:	a1 85       	ldd	r26, Z+9	; 0x09
     9e6:	b2 85       	ldd	r27, Z+10	; 0x0a
     9e8:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <Gv_F_CPU>
     9ec:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <Gv_F_CPU+0x1>
     9f0:	a0 93 8c 00 	sts	0x008C, r26	; 0x80008c <Gv_F_CPU+0x2>
     9f4:	b0 93 8d 00 	sts	0x008D, r27	; 0x80008d <Gv_F_CPU+0x3>
     9f8:	8a 81       	ldd	r24, Y+2	; 0x02
     9fa:	9b 81       	ldd	r25, Y+3	; 0x03
     9fc:	fc 01       	movw	r30, r24
     9fe:	80 81       	ld	r24, Z
     a00:	88 2f       	mov	r24, r24
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	81 30       	cpi	r24, 0x01	; 1
     a06:	91 05       	cpc	r25, r1
     a08:	09 f4       	brne	.+2      	; 0xa0c <Timers_Init+0x44>
     a0a:	64 c0       	rjmp	.+200    	; 0xad4 <Timers_Init+0x10c>
     a0c:	82 30       	cpi	r24, 0x02	; 2
     a0e:	91 05       	cpc	r25, r1
     a10:	09 f4       	brne	.+2      	; 0xa14 <Timers_Init+0x4c>
     a12:	cc c0       	rjmp	.+408    	; 0xbac <Timers_Init+0x1e4>
     a14:	89 2b       	or	r24, r25
     a16:	09 f0       	breq	.+2      	; 0xa1a <Timers_Init+0x52>
     a18:	26 c1       	rjmp	.+588    	; 0xc66 <Timers_Init+0x29e>
     a1a:	83 e5       	ldi	r24, 0x53	; 83
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	23 e5       	ldi	r18, 0x53	; 83
     a20:	30 e0       	ldi	r19, 0x00	; 0
     a22:	f9 01       	movw	r30, r18
     a24:	40 81       	ld	r20, Z
     a26:	2a 81       	ldd	r18, Y+2	; 0x02
     a28:	3b 81       	ldd	r19, Y+3	; 0x03
     a2a:	f9 01       	movw	r30, r18
     a2c:	21 81       	ldd	r18, Z+1	; 0x01
     a2e:	24 2b       	or	r18, r20
     a30:	fc 01       	movw	r30, r24
     a32:	20 83       	st	Z, r18
     a34:	89 e5       	ldi	r24, 0x59	; 89
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	29 e5       	ldi	r18, 0x59	; 89
     a3a:	30 e0       	ldi	r19, 0x00	; 0
     a3c:	f9 01       	movw	r30, r18
     a3e:	40 81       	ld	r20, Z
     a40:	2a 81       	ldd	r18, Y+2	; 0x02
     a42:	3b 81       	ldd	r19, Y+3	; 0x03
     a44:	f9 01       	movw	r30, r18
     a46:	26 81       	ldd	r18, Z+6	; 0x06
     a48:	24 2b       	or	r18, r20
     a4a:	fc 01       	movw	r30, r24
     a4c:	20 83       	st	Z, r18
     a4e:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <Gv_PrescallerTimer0_Mask>
     a52:	88 2f       	mov	r24, r24
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	82 30       	cpi	r24, 0x02	; 2
     a58:	91 05       	cpc	r25, r1
     a5a:	e9 f0       	breq	.+58     	; 0xa96 <Timers_Init+0xce>
     a5c:	83 30       	cpi	r24, 0x03	; 3
     a5e:	91 05       	cpc	r25, r1
     a60:	2c f4       	brge	.+10     	; 0xa6c <Timers_Init+0xa4>
     a62:	00 97       	sbiw	r24, 0x00	; 0
     a64:	61 f0       	breq	.+24     	; 0xa7e <Timers_Init+0xb6>
     a66:	01 97       	sbiw	r24, 0x01	; 1
     a68:	79 f0       	breq	.+30     	; 0xa88 <Timers_Init+0xc0>
     a6a:	31 c0       	rjmp	.+98     	; 0xace <Timers_Init+0x106>
     a6c:	84 30       	cpi	r24, 0x04	; 4
     a6e:	91 05       	cpc	r25, r1
     a70:	01 f1       	breq	.+64     	; 0xab2 <Timers_Init+0xea>
     a72:	84 30       	cpi	r24, 0x04	; 4
     a74:	91 05       	cpc	r25, r1
     a76:	b4 f0       	brlt	.+44     	; 0xaa4 <Timers_Init+0xdc>
     a78:	05 97       	sbiw	r24, 0x05	; 5
     a7a:	11 f1       	breq	.+68     	; 0xac0 <Timers_Init+0xf8>
     a7c:	28 c0       	rjmp	.+80     	; 0xace <Timers_Init+0x106>
     a7e:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     a82:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <Gv_PrescallerTimer0_AbsoluteValue>
     a86:	23 c0       	rjmp	.+70     	; 0xace <Timers_Init+0x106>
     a88:	81 e0       	ldi	r24, 0x01	; 1
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     a90:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <Gv_PrescallerTimer0_AbsoluteValue>
     a94:	1c c0       	rjmp	.+56     	; 0xace <Timers_Init+0x106>
     a96:	88 e0       	ldi	r24, 0x08	; 8
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     a9e:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <Gv_PrescallerTimer0_AbsoluteValue>
     aa2:	15 c0       	rjmp	.+42     	; 0xace <Timers_Init+0x106>
     aa4:	80 e4       	ldi	r24, 0x40	; 64
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     aac:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <Gv_PrescallerTimer0_AbsoluteValue>
     ab0:	0e c0       	rjmp	.+28     	; 0xace <Timers_Init+0x106>
     ab2:	80 e0       	ldi	r24, 0x00	; 0
     ab4:	91 e0       	ldi	r25, 0x01	; 1
     ab6:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     aba:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <Gv_PrescallerTimer0_AbsoluteValue>
     abe:	07 c0       	rjmp	.+14     	; 0xace <Timers_Init+0x106>
     ac0:	80 e0       	ldi	r24, 0x00	; 0
     ac2:	94 e0       	ldi	r25, 0x04	; 4
     ac4:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     ac8:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <Gv_PrescallerTimer0_AbsoluteValue>
     acc:	00 00       	nop
     ace:	81 e0       	ldi	r24, 0x01	; 1
     ad0:	89 83       	std	Y+1, r24	; 0x01
     ad2:	cb c0       	rjmp	.+406    	; 0xc6a <Timers_Init+0x2a2>
     ad4:	8f e4       	ldi	r24, 0x4F	; 79
     ad6:	90 e0       	ldi	r25, 0x00	; 0
     ad8:	2f e4       	ldi	r18, 0x4F	; 79
     ada:	30 e0       	ldi	r19, 0x00	; 0
     adc:	f9 01       	movw	r30, r18
     ade:	20 81       	ld	r18, Z
     ae0:	42 2f       	mov	r20, r18
     ae2:	2a 81       	ldd	r18, Y+2	; 0x02
     ae4:	3b 81       	ldd	r19, Y+3	; 0x03
     ae6:	f9 01       	movw	r30, r18
     ae8:	21 81       	ldd	r18, Z+1	; 0x01
     aea:	23 70       	andi	r18, 0x03	; 3
     aec:	24 2b       	or	r18, r20
     aee:	fc 01       	movw	r30, r24
     af0:	20 83       	st	Z, r18
     af2:	8e e4       	ldi	r24, 0x4E	; 78
     af4:	90 e0       	ldi	r25, 0x00	; 0
     af6:	2e e4       	ldi	r18, 0x4E	; 78
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	f9 01       	movw	r30, r18
     afc:	20 81       	ld	r18, Z
     afe:	42 2f       	mov	r20, r18
     b00:	2a 81       	ldd	r18, Y+2	; 0x02
     b02:	3b 81       	ldd	r19, Y+3	; 0x03
     b04:	f9 01       	movw	r30, r18
     b06:	21 81       	ldd	r18, Z+1	; 0x01
     b08:	28 71       	andi	r18, 0x18	; 24
     b0a:	24 2b       	or	r18, r20
     b0c:	fc 01       	movw	r30, r24
     b0e:	20 83       	st	Z, r18
     b10:	89 e5       	ldi	r24, 0x59	; 89
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	29 e5       	ldi	r18, 0x59	; 89
     b16:	30 e0       	ldi	r19, 0x00	; 0
     b18:	f9 01       	movw	r30, r18
     b1a:	20 81       	ld	r18, Z
     b1c:	24 60       	ori	r18, 0x04	; 4
     b1e:	fc 01       	movw	r30, r24
     b20:	20 83       	st	Z, r18
     b22:	0e 94 0e 03 	call	0x61c	; 0x61c <Interrupts_On>
     b26:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Gv_PrescallerTimer1_Mask>
     b2a:	88 2f       	mov	r24, r24
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	82 30       	cpi	r24, 0x02	; 2
     b30:	91 05       	cpc	r25, r1
     b32:	e9 f0       	breq	.+58     	; 0xb6e <Timers_Init+0x1a6>
     b34:	83 30       	cpi	r24, 0x03	; 3
     b36:	91 05       	cpc	r25, r1
     b38:	2c f4       	brge	.+10     	; 0xb44 <Timers_Init+0x17c>
     b3a:	00 97       	sbiw	r24, 0x00	; 0
     b3c:	61 f0       	breq	.+24     	; 0xb56 <Timers_Init+0x18e>
     b3e:	01 97       	sbiw	r24, 0x01	; 1
     b40:	79 f0       	breq	.+30     	; 0xb60 <Timers_Init+0x198>
     b42:	31 c0       	rjmp	.+98     	; 0xba6 <Timers_Init+0x1de>
     b44:	84 30       	cpi	r24, 0x04	; 4
     b46:	91 05       	cpc	r25, r1
     b48:	01 f1       	breq	.+64     	; 0xb8a <Timers_Init+0x1c2>
     b4a:	84 30       	cpi	r24, 0x04	; 4
     b4c:	91 05       	cpc	r25, r1
     b4e:	b4 f0       	brlt	.+44     	; 0xb7c <Timers_Init+0x1b4>
     b50:	05 97       	sbiw	r24, 0x05	; 5
     b52:	11 f1       	breq	.+68     	; 0xb98 <Timers_Init+0x1d0>
     b54:	28 c0       	rjmp	.+80     	; 0xba6 <Timers_Init+0x1de>
     b56:	10 92 a7 00 	sts	0x00A7, r1	; 0x8000a7 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b5a:	10 92 a6 00 	sts	0x00A6, r1	; 0x8000a6 <Gv_PrescallerTimer1_AbsoluteValue>
     b5e:	23 c0       	rjmp	.+70     	; 0xba6 <Timers_Init+0x1de>
     b60:	81 e0       	ldi	r24, 0x01	; 1
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b68:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <Gv_PrescallerTimer1_AbsoluteValue>
     b6c:	1c c0       	rjmp	.+56     	; 0xba6 <Timers_Init+0x1de>
     b6e:	88 e0       	ldi	r24, 0x08	; 8
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b76:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <Gv_PrescallerTimer1_AbsoluteValue>
     b7a:	15 c0       	rjmp	.+42     	; 0xba6 <Timers_Init+0x1de>
     b7c:	80 e4       	ldi	r24, 0x40	; 64
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b84:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <Gv_PrescallerTimer1_AbsoluteValue>
     b88:	0e c0       	rjmp	.+28     	; 0xba6 <Timers_Init+0x1de>
     b8a:	80 e0       	ldi	r24, 0x00	; 0
     b8c:	91 e0       	ldi	r25, 0x01	; 1
     b8e:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     b92:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <Gv_PrescallerTimer1_AbsoluteValue>
     b96:	07 c0       	rjmp	.+14     	; 0xba6 <Timers_Init+0x1de>
     b98:	80 e0       	ldi	r24, 0x00	; 0
     b9a:	94 e0       	ldi	r25, 0x04	; 4
     b9c:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     ba0:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <Gv_PrescallerTimer1_AbsoluteValue>
     ba4:	00 00       	nop
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	89 83       	std	Y+1, r24	; 0x01
     baa:	5f c0       	rjmp	.+190    	; 0xc6a <Timers_Init+0x2a2>
     bac:	85 e4       	ldi	r24, 0x45	; 69
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	25 e4       	ldi	r18, 0x45	; 69
     bb2:	30 e0       	ldi	r19, 0x00	; 0
     bb4:	f9 01       	movw	r30, r18
     bb6:	40 81       	ld	r20, Z
     bb8:	2a 81       	ldd	r18, Y+2	; 0x02
     bba:	3b 81       	ldd	r19, Y+3	; 0x03
     bbc:	f9 01       	movw	r30, r18
     bbe:	21 81       	ldd	r18, Z+1	; 0x01
     bc0:	24 2b       	or	r18, r20
     bc2:	fc 01       	movw	r30, r24
     bc4:	20 83       	st	Z, r18
     bc6:	89 e5       	ldi	r24, 0x59	; 89
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	29 e5       	ldi	r18, 0x59	; 89
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	f9 01       	movw	r30, r18
     bd0:	40 81       	ld	r20, Z
     bd2:	2a 81       	ldd	r18, Y+2	; 0x02
     bd4:	3b 81       	ldd	r19, Y+3	; 0x03
     bd6:	f9 01       	movw	r30, r18
     bd8:	26 81       	ldd	r18, Z+6	; 0x06
     bda:	24 2b       	or	r18, r20
     bdc:	fc 01       	movw	r30, r24
     bde:	20 83       	st	Z, r18
     be0:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <Gv_PrescallerTimer2_Mask>
     be4:	88 2f       	mov	r24, r24
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	82 30       	cpi	r24, 0x02	; 2
     bea:	91 05       	cpc	r25, r1
     bec:	e9 f0       	breq	.+58     	; 0xc28 <Timers_Init+0x260>
     bee:	83 30       	cpi	r24, 0x03	; 3
     bf0:	91 05       	cpc	r25, r1
     bf2:	2c f4       	brge	.+10     	; 0xbfe <Timers_Init+0x236>
     bf4:	00 97       	sbiw	r24, 0x00	; 0
     bf6:	61 f0       	breq	.+24     	; 0xc10 <Timers_Init+0x248>
     bf8:	01 97       	sbiw	r24, 0x01	; 1
     bfa:	79 f0       	breq	.+30     	; 0xc1a <Timers_Init+0x252>
     bfc:	31 c0       	rjmp	.+98     	; 0xc60 <Timers_Init+0x298>
     bfe:	86 30       	cpi	r24, 0x06	; 6
     c00:	91 05       	cpc	r25, r1
     c02:	01 f1       	breq	.+64     	; 0xc44 <Timers_Init+0x27c>
     c04:	87 30       	cpi	r24, 0x07	; 7
     c06:	91 05       	cpc	r25, r1
     c08:	21 f1       	breq	.+72     	; 0xc52 <Timers_Init+0x28a>
     c0a:	04 97       	sbiw	r24, 0x04	; 4
     c0c:	a1 f0       	breq	.+40     	; 0xc36 <Timers_Init+0x26e>
     c0e:	28 c0       	rjmp	.+80     	; 0xc60 <Timers_Init+0x298>
     c10:	10 92 a3 00 	sts	0x00A3, r1	; 0x8000a3 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c14:	10 92 a2 00 	sts	0x00A2, r1	; 0x8000a2 <Gv_PrescallerTimer2_AbsoluteValue>
     c18:	23 c0       	rjmp	.+70     	; 0xc60 <Timers_Init+0x298>
     c1a:	81 e0       	ldi	r24, 0x01	; 1
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c22:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <Gv_PrescallerTimer2_AbsoluteValue>
     c26:	1c c0       	rjmp	.+56     	; 0xc60 <Timers_Init+0x298>
     c28:	88 e0       	ldi	r24, 0x08	; 8
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c30:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <Gv_PrescallerTimer2_AbsoluteValue>
     c34:	15 c0       	rjmp	.+42     	; 0xc60 <Timers_Init+0x298>
     c36:	80 e4       	ldi	r24, 0x40	; 64
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c3e:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <Gv_PrescallerTimer2_AbsoluteValue>
     c42:	0e c0       	rjmp	.+28     	; 0xc60 <Timers_Init+0x298>
     c44:	80 e0       	ldi	r24, 0x00	; 0
     c46:	91 e0       	ldi	r25, 0x01	; 1
     c48:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c4c:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <Gv_PrescallerTimer2_AbsoluteValue>
     c50:	07 c0       	rjmp	.+14     	; 0xc60 <Timers_Init+0x298>
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	94 e0       	ldi	r25, 0x04	; 4
     c56:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     c5a:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <Gv_PrescallerTimer2_AbsoluteValue>
     c5e:	00 00       	nop
     c60:	81 e0       	ldi	r24, 0x01	; 1
     c62:	89 83       	std	Y+1, r24	; 0x01
     c64:	02 c0       	rjmp	.+4      	; 0xc6a <Timers_Init+0x2a2>
     c66:	19 82       	std	Y+1, r1	; 0x01
     c68:	00 00       	nop
     c6a:	8a 81       	ldd	r24, Y+2	; 0x02
     c6c:	9b 81       	ldd	r25, Y+3	; 0x03
     c6e:	fc 01       	movw	r30, r24
     c70:	82 81       	ldd	r24, Z+2	; 0x02
     c72:	93 81       	ldd	r25, Z+3	; 0x03
     c74:	a4 81       	ldd	r26, Z+4	; 0x04
     c76:	b5 81       	ldd	r27, Z+5	; 0x05
     c78:	2a 81       	ldd	r18, Y+2	; 0x02
     c7a:	3b 81       	ldd	r19, Y+3	; 0x03
     c7c:	f9 01       	movw	r30, r18
     c7e:	20 81       	ld	r18, Z
     c80:	ac 01       	movw	r20, r24
     c82:	bd 01       	movw	r22, r26
     c84:	82 2f       	mov	r24, r18
     c86:	0e 94 4c 06 	call	0xc98	; 0xc98 <Timers_SetCounter>
     c8a:	89 81       	ldd	r24, Y+1	; 0x01
     c8c:	0f 90       	pop	r0
     c8e:	0f 90       	pop	r0
     c90:	0f 90       	pop	r0
     c92:	df 91       	pop	r29
     c94:	cf 91       	pop	r28
     c96:	08 95       	ret

00000c98 <Timers_SetCounter>:
     c98:	cf 93       	push	r28
     c9a:	df 93       	push	r29
     c9c:	cd b7       	in	r28, 0x3d	; 61
     c9e:	de b7       	in	r29, 0x3e	; 62
     ca0:	2d 97       	sbiw	r28, 0x0d	; 13
     ca2:	0f b6       	in	r0, 0x3f	; 63
     ca4:	f8 94       	cli
     ca6:	de bf       	out	0x3e, r29	; 62
     ca8:	0f be       	out	0x3f, r0	; 63
     caa:	cd bf       	out	0x3d, r28	; 61
     cac:	89 87       	std	Y+9, r24	; 0x09
     cae:	4a 87       	std	Y+10, r20	; 0x0a
     cb0:	5b 87       	std	Y+11, r21	; 0x0b
     cb2:	6c 87       	std	Y+12, r22	; 0x0c
     cb4:	7d 87       	std	Y+13, r23	; 0x0d
     cb6:	19 82       	std	Y+1, r1	; 0x01
     cb8:	1a 82       	std	Y+2, r1	; 0x02
     cba:	1b 82       	std	Y+3, r1	; 0x03
     cbc:	1c 82       	std	Y+4, r1	; 0x04
     cbe:	89 85       	ldd	r24, Y+9	; 0x09
     cc0:	88 2f       	mov	r24, r24
     cc2:	90 e0       	ldi	r25, 0x00	; 0
     cc4:	81 30       	cpi	r24, 0x01	; 1
     cc6:	91 05       	cpc	r25, r1
     cc8:	09 f4       	brne	.+2      	; 0xccc <Timers_SetCounter+0x34>
     cca:	61 c0       	rjmp	.+194    	; 0xd8e <Timers_SetCounter+0xf6>
     ccc:	82 30       	cpi	r24, 0x02	; 2
     cce:	91 05       	cpc	r25, r1
     cd0:	09 f4       	brne	.+2      	; 0xcd4 <Timers_SetCounter+0x3c>
     cd2:	bd c0       	rjmp	.+378    	; 0xe4e <Timers_SetCounter+0x1b6>
     cd4:	89 2b       	or	r24, r25
     cd6:	09 f0       	breq	.+2      	; 0xcda <Timers_SetCounter+0x42>
     cd8:	14 c1       	rjmp	.+552    	; 0xf02 <Timers_SetCounter+0x26a>
     cda:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <Gv_PrescallerTimer0_AbsoluteValue>
     cde:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <Gv_PrescallerTimer0_AbsoluteValue+0x1>
     ce2:	cc 01       	movw	r24, r24
     ce4:	a0 e0       	ldi	r26, 0x00	; 0
     ce6:	b0 e0       	ldi	r27, 0x00	; 0
     ce8:	9c 01       	movw	r18, r24
     cea:	ad 01       	movw	r20, r26
     cec:	60 e4       	ldi	r22, 0x40	; 64
     cee:	72 e4       	ldi	r23, 0x42	; 66
     cf0:	8f e0       	ldi	r24, 0x0F	; 15
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	0e 94 b3 09 	call	0x1366	; 0x1366 <__mulsi3>
     cf8:	dc 01       	movw	r26, r24
     cfa:	cb 01       	movw	r24, r22
     cfc:	20 91 8a 00 	lds	r18, 0x008A	; 0x80008a <Gv_F_CPU>
     d00:	30 91 8b 00 	lds	r19, 0x008B	; 0x80008b <Gv_F_CPU+0x1>
     d04:	40 91 8c 00 	lds	r20, 0x008C	; 0x80008c <Gv_F_CPU+0x2>
     d08:	50 91 8d 00 	lds	r21, 0x008D	; 0x80008d <Gv_F_CPU+0x3>
     d0c:	bc 01       	movw	r22, r24
     d0e:	cd 01       	movw	r24, r26
     d10:	0e 94 c3 09 	call	0x1386	; 0x1386 <__udivmodsi4>
     d14:	da 01       	movw	r26, r20
     d16:	c9 01       	movw	r24, r18
     d18:	9c 01       	movw	r18, r24
     d1a:	ad 01       	movw	r20, r26
     d1c:	8a 85       	ldd	r24, Y+10	; 0x0a
     d1e:	9b 85       	ldd	r25, Y+11	; 0x0b
     d20:	ac 85       	ldd	r26, Y+12	; 0x0c
     d22:	bd 85       	ldd	r27, Y+13	; 0x0d
     d24:	bc 01       	movw	r22, r24
     d26:	cd 01       	movw	r24, r26
     d28:	0e 94 c3 09 	call	0x1386	; 0x1386 <__udivmodsi4>
     d2c:	da 01       	movw	r26, r20
     d2e:	c9 01       	movw	r24, r18
     d30:	8d 83       	std	Y+5, r24	; 0x05
     d32:	9e 83       	std	Y+6, r25	; 0x06
     d34:	af 83       	std	Y+7, r26	; 0x07
     d36:	b8 87       	std	Y+8, r27	; 0x08
     d38:	8d 81       	ldd	r24, Y+5	; 0x05
     d3a:	9e 81       	ldd	r25, Y+6	; 0x06
     d3c:	af 81       	ldd	r26, Y+7	; 0x07
     d3e:	b8 85       	ldd	r27, Y+8	; 0x08
     d40:	81 30       	cpi	r24, 0x01	; 1
     d42:	91 40       	sbci	r25, 0x01	; 1
     d44:	a1 05       	cpc	r26, r1
     d46:	b1 05       	cpc	r27, r1
     d48:	28 f0       	brcs	.+10     	; 0xd54 <Timers_SetCounter+0xbc>
     d4a:	19 82       	std	Y+1, r1	; 0x01
     d4c:	1a 82       	std	Y+2, r1	; 0x02
     d4e:	1b 82       	std	Y+3, r1	; 0x03
     d50:	1c 82       	std	Y+4, r1	; 0x04
     d52:	dc c0       	rjmp	.+440    	; 0xf0c <Timers_SetCounter+0x274>
     d54:	8d 81       	ldd	r24, Y+5	; 0x05
     d56:	9e 81       	ldd	r25, Y+6	; 0x06
     d58:	20 e0       	ldi	r18, 0x00	; 0
     d5a:	31 e0       	ldi	r19, 0x01	; 1
     d5c:	a9 01       	movw	r20, r18
     d5e:	48 1b       	sub	r20, r24
     d60:	59 0b       	sbc	r21, r25
     d62:	ca 01       	movw	r24, r20
     d64:	90 93 8f 00 	sts	0x008F, r25	; 0x80008f <Gv_Count+0x1>
     d68:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <Gv_Count>
     d6c:	82 e5       	ldi	r24, 0x52	; 82
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	20 91 8e 00 	lds	r18, 0x008E	; 0x80008e <Gv_Count>
     d74:	30 91 8f 00 	lds	r19, 0x008F	; 0x80008f <Gv_Count+0x1>
     d78:	fc 01       	movw	r30, r24
     d7a:	20 83       	st	Z, r18
     d7c:	81 e0       	ldi	r24, 0x01	; 1
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	a0 e0       	ldi	r26, 0x00	; 0
     d82:	b0 e0       	ldi	r27, 0x00	; 0
     d84:	89 83       	std	Y+1, r24	; 0x01
     d86:	9a 83       	std	Y+2, r25	; 0x02
     d88:	ab 83       	std	Y+3, r26	; 0x03
     d8a:	bc 83       	std	Y+4, r27	; 0x04
     d8c:	bf c0       	rjmp	.+382    	; 0xf0c <Timers_SetCounter+0x274>
     d8e:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <Gv_PrescallerTimer1_AbsoluteValue>
     d92:	90 91 a7 00 	lds	r25, 0x00A7	; 0x8000a7 <Gv_PrescallerTimer1_AbsoluteValue+0x1>
     d96:	cc 01       	movw	r24, r24
     d98:	a0 e0       	ldi	r26, 0x00	; 0
     d9a:	b0 e0       	ldi	r27, 0x00	; 0
     d9c:	9c 01       	movw	r18, r24
     d9e:	ad 01       	movw	r20, r26
     da0:	60 e4       	ldi	r22, 0x40	; 64
     da2:	72 e4       	ldi	r23, 0x42	; 66
     da4:	8f e0       	ldi	r24, 0x0F	; 15
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	0e 94 b3 09 	call	0x1366	; 0x1366 <__mulsi3>
     dac:	dc 01       	movw	r26, r24
     dae:	cb 01       	movw	r24, r22
     db0:	20 91 8a 00 	lds	r18, 0x008A	; 0x80008a <Gv_F_CPU>
     db4:	30 91 8b 00 	lds	r19, 0x008B	; 0x80008b <Gv_F_CPU+0x1>
     db8:	40 91 8c 00 	lds	r20, 0x008C	; 0x80008c <Gv_F_CPU+0x2>
     dbc:	50 91 8d 00 	lds	r21, 0x008D	; 0x80008d <Gv_F_CPU+0x3>
     dc0:	bc 01       	movw	r22, r24
     dc2:	cd 01       	movw	r24, r26
     dc4:	0e 94 c3 09 	call	0x1386	; 0x1386 <__udivmodsi4>
     dc8:	da 01       	movw	r26, r20
     dca:	c9 01       	movw	r24, r18
     dcc:	9c 01       	movw	r18, r24
     dce:	ad 01       	movw	r20, r26
     dd0:	8a 85       	ldd	r24, Y+10	; 0x0a
     dd2:	9b 85       	ldd	r25, Y+11	; 0x0b
     dd4:	ac 85       	ldd	r26, Y+12	; 0x0c
     dd6:	bd 85       	ldd	r27, Y+13	; 0x0d
     dd8:	bc 01       	movw	r22, r24
     dda:	cd 01       	movw	r24, r26
     ddc:	0e 94 c3 09 	call	0x1386	; 0x1386 <__udivmodsi4>
     de0:	da 01       	movw	r26, r20
     de2:	c9 01       	movw	r24, r18
     de4:	8d 83       	std	Y+5, r24	; 0x05
     de6:	9e 83       	std	Y+6, r25	; 0x06
     de8:	af 83       	std	Y+7, r26	; 0x07
     dea:	b8 87       	std	Y+8, r27	; 0x08
     dec:	8d 81       	ldd	r24, Y+5	; 0x05
     dee:	9e 81       	ldd	r25, Y+6	; 0x06
     df0:	af 81       	ldd	r26, Y+7	; 0x07
     df2:	b8 85       	ldd	r27, Y+8	; 0x08
     df4:	01 97       	sbiw	r24, 0x01	; 1
     df6:	a1 40       	sbci	r26, 0x01	; 1
     df8:	b1 05       	cpc	r27, r1
     dfa:	28 f0       	brcs	.+10     	; 0xe06 <Timers_SetCounter+0x16e>
     dfc:	19 82       	std	Y+1, r1	; 0x01
     dfe:	1a 82       	std	Y+2, r1	; 0x02
     e00:	1b 82       	std	Y+3, r1	; 0x03
     e02:	1c 82       	std	Y+4, r1	; 0x04
     e04:	83 c0       	rjmp	.+262    	; 0xf0c <Timers_SetCounter+0x274>
     e06:	8d 81       	ldd	r24, Y+5	; 0x05
     e08:	9e 81       	ldd	r25, Y+6	; 0x06
     e0a:	91 95       	neg	r25
     e0c:	81 95       	neg	r24
     e0e:	91 09       	sbc	r25, r1
     e10:	90 93 8f 00 	sts	0x008F, r25	; 0x80008f <Gv_Count+0x1>
     e14:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <Gv_Count>
     e18:	8d e4       	ldi	r24, 0x4D	; 77
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	20 91 8e 00 	lds	r18, 0x008E	; 0x80008e <Gv_Count>
     e20:	30 91 8f 00 	lds	r19, 0x008F	; 0x80008f <Gv_Count+0x1>
     e24:	23 2f       	mov	r18, r19
     e26:	33 27       	eor	r19, r19
     e28:	fc 01       	movw	r30, r24
     e2a:	20 83       	st	Z, r18
     e2c:	8c e4       	ldi	r24, 0x4C	; 76
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	20 91 8e 00 	lds	r18, 0x008E	; 0x80008e <Gv_Count>
     e34:	30 91 8f 00 	lds	r19, 0x008F	; 0x80008f <Gv_Count+0x1>
     e38:	fc 01       	movw	r30, r24
     e3a:	20 83       	st	Z, r18
     e3c:	81 e0       	ldi	r24, 0x01	; 1
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	a0 e0       	ldi	r26, 0x00	; 0
     e42:	b0 e0       	ldi	r27, 0x00	; 0
     e44:	89 83       	std	Y+1, r24	; 0x01
     e46:	9a 83       	std	Y+2, r25	; 0x02
     e48:	ab 83       	std	Y+3, r26	; 0x03
     e4a:	bc 83       	std	Y+4, r27	; 0x04
     e4c:	5f c0       	rjmp	.+190    	; 0xf0c <Timers_SetCounter+0x274>
     e4e:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <Gv_PrescallerTimer2_AbsoluteValue>
     e52:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <Gv_PrescallerTimer2_AbsoluteValue+0x1>
     e56:	cc 01       	movw	r24, r24
     e58:	a0 e0       	ldi	r26, 0x00	; 0
     e5a:	b0 e0       	ldi	r27, 0x00	; 0
     e5c:	9c 01       	movw	r18, r24
     e5e:	ad 01       	movw	r20, r26
     e60:	60 e4       	ldi	r22, 0x40	; 64
     e62:	72 e4       	ldi	r23, 0x42	; 66
     e64:	8f e0       	ldi	r24, 0x0F	; 15
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	0e 94 b3 09 	call	0x1366	; 0x1366 <__mulsi3>
     e6c:	dc 01       	movw	r26, r24
     e6e:	cb 01       	movw	r24, r22
     e70:	20 91 8a 00 	lds	r18, 0x008A	; 0x80008a <Gv_F_CPU>
     e74:	30 91 8b 00 	lds	r19, 0x008B	; 0x80008b <Gv_F_CPU+0x1>
     e78:	40 91 8c 00 	lds	r20, 0x008C	; 0x80008c <Gv_F_CPU+0x2>
     e7c:	50 91 8d 00 	lds	r21, 0x008D	; 0x80008d <Gv_F_CPU+0x3>
     e80:	bc 01       	movw	r22, r24
     e82:	cd 01       	movw	r24, r26
     e84:	0e 94 c3 09 	call	0x1386	; 0x1386 <__udivmodsi4>
     e88:	da 01       	movw	r26, r20
     e8a:	c9 01       	movw	r24, r18
     e8c:	9c 01       	movw	r18, r24
     e8e:	ad 01       	movw	r20, r26
     e90:	8a 85       	ldd	r24, Y+10	; 0x0a
     e92:	9b 85       	ldd	r25, Y+11	; 0x0b
     e94:	ac 85       	ldd	r26, Y+12	; 0x0c
     e96:	bd 85       	ldd	r27, Y+13	; 0x0d
     e98:	bc 01       	movw	r22, r24
     e9a:	cd 01       	movw	r24, r26
     e9c:	0e 94 c3 09 	call	0x1386	; 0x1386 <__udivmodsi4>
     ea0:	da 01       	movw	r26, r20
     ea2:	c9 01       	movw	r24, r18
     ea4:	8d 83       	std	Y+5, r24	; 0x05
     ea6:	9e 83       	std	Y+6, r25	; 0x06
     ea8:	af 83       	std	Y+7, r26	; 0x07
     eaa:	b8 87       	std	Y+8, r27	; 0x08
     eac:	8d 81       	ldd	r24, Y+5	; 0x05
     eae:	9e 81       	ldd	r25, Y+6	; 0x06
     eb0:	af 81       	ldd	r26, Y+7	; 0x07
     eb2:	b8 85       	ldd	r27, Y+8	; 0x08
     eb4:	81 30       	cpi	r24, 0x01	; 1
     eb6:	91 40       	sbci	r25, 0x01	; 1
     eb8:	a1 05       	cpc	r26, r1
     eba:	b1 05       	cpc	r27, r1
     ebc:	28 f0       	brcs	.+10     	; 0xec8 <Timers_SetCounter+0x230>
     ebe:	19 82       	std	Y+1, r1	; 0x01
     ec0:	1a 82       	std	Y+2, r1	; 0x02
     ec2:	1b 82       	std	Y+3, r1	; 0x03
     ec4:	1c 82       	std	Y+4, r1	; 0x04
     ec6:	22 c0       	rjmp	.+68     	; 0xf0c <Timers_SetCounter+0x274>
     ec8:	8d 81       	ldd	r24, Y+5	; 0x05
     eca:	9e 81       	ldd	r25, Y+6	; 0x06
     ecc:	20 e0       	ldi	r18, 0x00	; 0
     ece:	31 e0       	ldi	r19, 0x01	; 1
     ed0:	a9 01       	movw	r20, r18
     ed2:	48 1b       	sub	r20, r24
     ed4:	59 0b       	sbc	r21, r25
     ed6:	ca 01       	movw	r24, r20
     ed8:	90 93 8f 00 	sts	0x008F, r25	; 0x80008f <Gv_Count+0x1>
     edc:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <Gv_Count>
     ee0:	84 e4       	ldi	r24, 0x44	; 68
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	20 91 8e 00 	lds	r18, 0x008E	; 0x80008e <Gv_Count>
     ee8:	30 91 8f 00 	lds	r19, 0x008F	; 0x80008f <Gv_Count+0x1>
     eec:	fc 01       	movw	r30, r24
     eee:	20 83       	st	Z, r18
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	a0 e0       	ldi	r26, 0x00	; 0
     ef6:	b0 e0       	ldi	r27, 0x00	; 0
     ef8:	89 83       	std	Y+1, r24	; 0x01
     efa:	9a 83       	std	Y+2, r25	; 0x02
     efc:	ab 83       	std	Y+3, r26	; 0x03
     efe:	bc 83       	std	Y+4, r27	; 0x04
     f00:	05 c0       	rjmp	.+10     	; 0xf0c <Timers_SetCounter+0x274>
     f02:	19 82       	std	Y+1, r1	; 0x01
     f04:	1a 82       	std	Y+2, r1	; 0x02
     f06:	1b 82       	std	Y+3, r1	; 0x03
     f08:	1c 82       	std	Y+4, r1	; 0x04
     f0a:	00 00       	nop
     f0c:	89 81       	ldd	r24, Y+1	; 0x01
     f0e:	2d 96       	adiw	r28, 0x0d	; 13
     f10:	0f b6       	in	r0, 0x3f	; 63
     f12:	f8 94       	cli
     f14:	de bf       	out	0x3e, r29	; 62
     f16:	0f be       	out	0x3f, r0	; 63
     f18:	cd bf       	out	0x3d, r28	; 61
     f1a:	df 91       	pop	r29
     f1c:	cf 91       	pop	r28
     f1e:	08 95       	ret

00000f20 <Timers_Start>:
     f20:	cf 93       	push	r28
     f22:	df 93       	push	r29
     f24:	1f 92       	push	r1
     f26:	cd b7       	in	r28, 0x3d	; 61
     f28:	de b7       	in	r29, 0x3e	; 62
     f2a:	89 83       	std	Y+1, r24	; 0x01
     f2c:	89 81       	ldd	r24, Y+1	; 0x01
     f2e:	88 2f       	mov	r24, r24
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	81 30       	cpi	r24, 0x01	; 1
     f34:	91 05       	cpc	r25, r1
     f36:	99 f0       	breq	.+38     	; 0xf5e <Timers_Start+0x3e>
     f38:	82 30       	cpi	r24, 0x02	; 2
     f3a:	91 05       	cpc	r25, r1
     f3c:	e1 f0       	breq	.+56     	; 0xf76 <Timers_Start+0x56>
     f3e:	89 2b       	or	r24, r25
     f40:	09 f0       	breq	.+2      	; 0xf44 <Timers_Start+0x24>
     f42:	26 c0       	rjmp	.+76     	; 0xf90 <Timers_Start+0x70>
     f44:	83 e5       	ldi	r24, 0x53	; 83
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	23 e5       	ldi	r18, 0x53	; 83
     f4a:	30 e0       	ldi	r19, 0x00	; 0
     f4c:	f9 01       	movw	r30, r18
     f4e:	20 81       	ld	r18, Z
     f50:	28 7f       	andi	r18, 0xF8	; 248
     f52:	30 91 66 00 	lds	r19, 0x0066	; 0x800066 <Gv_PrescallerTimer0_Mask>
     f56:	23 2b       	or	r18, r19
     f58:	fc 01       	movw	r30, r24
     f5a:	20 83       	st	Z, r18
     f5c:	19 c0       	rjmp	.+50     	; 0xf90 <Timers_Start+0x70>
     f5e:	40 91 67 00 	lds	r20, 0x0067	; 0x800067 <Gv_PrescallerTimer1_Mask>
     f62:	8e e4       	ldi	r24, 0x4E	; 78
     f64:	90 e0       	ldi	r25, 0x00	; 0
     f66:	2e e4       	ldi	r18, 0x4E	; 78
     f68:	30 e0       	ldi	r19, 0x00	; 0
     f6a:	f9 01       	movw	r30, r18
     f6c:	20 81       	ld	r18, Z
     f6e:	24 2b       	or	r18, r20
     f70:	fc 01       	movw	r30, r24
     f72:	20 83       	st	Z, r18
     f74:	0d c0       	rjmp	.+26     	; 0xf90 <Timers_Start+0x70>
     f76:	85 e4       	ldi	r24, 0x45	; 69
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	25 e4       	ldi	r18, 0x45	; 69
     f7c:	30 e0       	ldi	r19, 0x00	; 0
     f7e:	f9 01       	movw	r30, r18
     f80:	20 81       	ld	r18, Z
     f82:	28 7f       	andi	r18, 0xF8	; 248
     f84:	30 91 68 00 	lds	r19, 0x0068	; 0x800068 <Gv_PrescallerTimer2_Mask>
     f88:	23 2b       	or	r18, r19
     f8a:	fc 01       	movw	r30, r24
     f8c:	20 83       	st	Z, r18
     f8e:	00 00       	nop
     f90:	81 e0       	ldi	r24, 0x01	; 1
     f92:	0f 90       	pop	r0
     f94:	df 91       	pop	r29
     f96:	cf 91       	pop	r28
     f98:	08 95       	ret

00000f9a <__vector_9>:
}


ISR_T(TIMER1_OVF_vect)
{
     f9a:	1f 92       	push	r1
     f9c:	0f 92       	push	r0
     f9e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     fa2:	0f 92       	push	r0
     fa4:	11 24       	eor	r1, r1
     fa6:	2f 93       	push	r18
     fa8:	3f 93       	push	r19
     faa:	4f 93       	push	r20
     fac:	5f 93       	push	r21
     fae:	6f 93       	push	r22
     fb0:	7f 93       	push	r23
     fb2:	8f 93       	push	r24
     fb4:	9f 93       	push	r25
     fb6:	af 93       	push	r26
     fb8:	bf 93       	push	r27
     fba:	ef 93       	push	r30
     fbc:	ff 93       	push	r31
     fbe:	cf 93       	push	r28
     fc0:	df 93       	push	r29
     fc2:	cd b7       	in	r28, 0x3d	; 61
     fc4:	de b7       	in	r29, 0x3e	; 62
	Time_Current++;
     fc6:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <Time_Current>
     fca:	90 91 9f 00 	lds	r25, 0x009F	; 0x80009f <Time_Current+0x1>
     fce:	a0 91 a0 00 	lds	r26, 0x00A0	; 0x8000a0 <Time_Current+0x2>
     fd2:	b0 91 a1 00 	lds	r27, 0x00A1	; 0x8000a1 <Time_Current+0x3>
     fd6:	01 96       	adiw	r24, 0x01	; 1
     fd8:	a1 1d       	adc	r26, r1
     fda:	b1 1d       	adc	r27, r1
     fdc:	80 93 9e 00 	sts	0x009E, r24	; 0x80009e <Time_Current>
     fe0:	90 93 9f 00 	sts	0x009F, r25	; 0x80009f <Time_Current+0x1>
     fe4:	a0 93 a0 00 	sts	0x00A0, r26	; 0x8000a0 <Time_Current+0x2>
     fe8:	b0 93 a1 00 	sts	0x00A1, r27	; 0x8000a1 <Time_Current+0x3>
	Timers_SetCounter(TIMER1,SECONDS_TO_MICROSECONSD_FACTOR);
     fec:	40 e4       	ldi	r20, 0x40	; 64
     fee:	52 e4       	ldi	r21, 0x42	; 66
     ff0:	6f e0       	ldi	r22, 0x0F	; 15
     ff2:	70 e0       	ldi	r23, 0x00	; 0
     ff4:	81 e0       	ldi	r24, 0x01	; 1
     ff6:	0e 94 4c 06 	call	0xc98	; 0xc98 <Timers_SetCounter>
     ffa:	00 00       	nop
     ffc:	df 91       	pop	r29
     ffe:	cf 91       	pop	r28
    1000:	ff 91       	pop	r31
    1002:	ef 91       	pop	r30
    1004:	bf 91       	pop	r27
    1006:	af 91       	pop	r26
    1008:	9f 91       	pop	r25
    100a:	8f 91       	pop	r24
    100c:	7f 91       	pop	r23
    100e:	6f 91       	pop	r22
    1010:	5f 91       	pop	r21
    1012:	4f 91       	pop	r20
    1014:	3f 91       	pop	r19
    1016:	2f 91       	pop	r18
    1018:	0f 90       	pop	r0
    101a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    101e:	0f 90       	pop	r0
    1020:	1f 90       	pop	r1
    1022:	18 95       	reti

00001024 <UART_Init>:
	while(data[i]){	
		UART_Send(data[i]);
		i++;
	}
	return OK;
}
    1024:	ef 92       	push	r14
    1026:	ff 92       	push	r15
    1028:	0f 93       	push	r16
    102a:	1f 93       	push	r17
    102c:	cf 93       	push	r28
    102e:	df 93       	push	r29
    1030:	00 d0       	rcall	.+0      	; 0x1032 <UART_Init+0xe>
    1032:	00 d0       	rcall	.+0      	; 0x1034 <UART_Init+0x10>
    1034:	00 d0       	rcall	.+0      	; 0x1036 <UART_Init+0x12>
    1036:	cd b7       	in	r28, 0x3d	; 61
    1038:	de b7       	in	r29, 0x3e	; 62
    103a:	9e 83       	std	Y+6, r25	; 0x06
    103c:	8d 83       	std	Y+5, r24	; 0x05
    103e:	81 e0       	ldi	r24, 0x01	; 1
    1040:	89 83       	std	Y+1, r24	; 0x01
    1042:	80 e8       	ldi	r24, 0x80	; 128
    1044:	8a 83       	std	Y+2, r24	; 0x02
    1046:	8d 81       	ldd	r24, Y+5	; 0x05
    1048:	9e 81       	ldd	r25, Y+6	; 0x06
    104a:	fc 01       	movw	r30, r24
    104c:	21 85       	ldd	r18, Z+9	; 0x09
    104e:	32 85       	ldd	r19, Z+10	; 0x0a
    1050:	43 85       	ldd	r20, Z+11	; 0x0b
    1052:	54 85       	ldd	r21, Z+12	; 0x0c
    1054:	8d 81       	ldd	r24, Y+5	; 0x05
    1056:	9e 81       	ldd	r25, Y+6	; 0x06
    1058:	fc 01       	movw	r30, r24
    105a:	80 81       	ld	r24, Z
    105c:	91 81       	ldd	r25, Z+1	; 0x01
    105e:	a2 81       	ldd	r26, Z+2	; 0x02
    1060:	b3 81       	ldd	r27, Z+3	; 0x03
    1062:	88 0f       	add	r24, r24
    1064:	99 1f       	adc	r25, r25
    1066:	aa 1f       	adc	r26, r26
    1068:	bb 1f       	adc	r27, r27
    106a:	88 0f       	add	r24, r24
    106c:	99 1f       	adc	r25, r25
    106e:	aa 1f       	adc	r26, r26
    1070:	bb 1f       	adc	r27, r27
    1072:	88 0f       	add	r24, r24
    1074:	99 1f       	adc	r25, r25
    1076:	aa 1f       	adc	r26, r26
    1078:	bb 1f       	adc	r27, r27
    107a:	88 0f       	add	r24, r24
    107c:	99 1f       	adc	r25, r25
    107e:	aa 1f       	adc	r26, r26
    1080:	bb 1f       	adc	r27, r27
    1082:	7c 01       	movw	r14, r24
    1084:	8d 01       	movw	r16, r26
    1086:	ca 01       	movw	r24, r20
    1088:	b9 01       	movw	r22, r18
    108a:	a8 01       	movw	r20, r16
    108c:	97 01       	movw	r18, r14
    108e:	0e 94 c3 09 	call	0x1386	; 0x1386 <__udivmodsi4>
    1092:	da 01       	movw	r26, r20
    1094:	c9 01       	movw	r24, r18
    1096:	01 97       	sbiw	r24, 0x01	; 1
    1098:	9c 83       	std	Y+4, r25	; 0x04
    109a:	8b 83       	std	Y+3, r24	; 0x03
    109c:	8a 81       	ldd	r24, Y+2	; 0x02
    109e:	80 68       	ori	r24, 0x80	; 128
    10a0:	8a 83       	std	Y+2, r24	; 0x02
    10a2:	8a 81       	ldd	r24, Y+2	; 0x02
    10a4:	82 60       	ori	r24, 0x02	; 2
    10a6:	8a 83       	std	Y+2, r24	; 0x02
    10a8:	8a 81       	ldd	r24, Y+2	; 0x02
    10aa:	84 60       	ori	r24, 0x04	; 4
    10ac:	8a 83       	std	Y+2, r24	; 0x02
    10ae:	8a e2       	ldi	r24, 0x2A	; 42
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	2a e2       	ldi	r18, 0x2A	; 42
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	f9 01       	movw	r30, r18
    10b8:	20 81       	ld	r18, Z
    10ba:	2b 7f       	andi	r18, 0xFB	; 251
    10bc:	fc 01       	movw	r30, r24
    10be:	20 83       	st	Z, r18
    10c0:	8d 81       	ldd	r24, Y+5	; 0x05
    10c2:	9e 81       	ldd	r25, Y+6	; 0x06
    10c4:	fc 01       	movw	r30, r24
    10c6:	84 81       	ldd	r24, Z+4	; 0x04
    10c8:	88 2f       	mov	r24, r24
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	00 97       	sbiw	r24, 0x00	; 0
    10ce:	61 f0       	breq	.+24     	; 0x10e8 <UART_Init+0xc4>
    10d0:	01 97       	sbiw	r24, 0x01	; 1
    10d2:	a1 f4       	brne	.+40     	; 0x10fc <UART_Init+0xd8>
    10d4:	8a e2       	ldi	r24, 0x2A	; 42
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	2a e2       	ldi	r18, 0x2A	; 42
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	f9 01       	movw	r30, r18
    10de:	20 81       	ld	r18, Z
    10e0:	20 61       	ori	r18, 0x10	; 16
    10e2:	fc 01       	movw	r30, r24
    10e4:	20 83       	st	Z, r18
    10e6:	0c c0       	rjmp	.+24     	; 0x1100 <UART_Init+0xdc>
    10e8:	8a e2       	ldi	r24, 0x2A	; 42
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	2a e2       	ldi	r18, 0x2A	; 42
    10ee:	30 e0       	ldi	r19, 0x00	; 0
    10f0:	f9 01       	movw	r30, r18
    10f2:	20 81       	ld	r18, Z
    10f4:	2f 7e       	andi	r18, 0xEF	; 239
    10f6:	fc 01       	movw	r30, r24
    10f8:	20 83       	st	Z, r18
    10fa:	02 c0       	rjmp	.+4      	; 0x1100 <UART_Init+0xdc>
    10fc:	19 82       	std	Y+1, r1	; 0x01
    10fe:	00 00       	nop
    1100:	8d 81       	ldd	r24, Y+5	; 0x05
    1102:	9e 81       	ldd	r25, Y+6	; 0x06
    1104:	fc 01       	movw	r30, r24
    1106:	85 81       	ldd	r24, Z+5	; 0x05
    1108:	88 2f       	mov	r24, r24
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	00 97       	sbiw	r24, 0x00	; 0
    110e:	61 f0       	breq	.+24     	; 0x1128 <UART_Init+0x104>
    1110:	01 97       	sbiw	r24, 0x01	; 1
    1112:	a1 f4       	brne	.+40     	; 0x113c <UART_Init+0x118>
    1114:	8a e2       	ldi	r24, 0x2A	; 42
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	2a e2       	ldi	r18, 0x2A	; 42
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	f9 01       	movw	r30, r18
    111e:	20 81       	ld	r18, Z
    1120:	28 60       	ori	r18, 0x08	; 8
    1122:	fc 01       	movw	r30, r24
    1124:	20 83       	st	Z, r18
    1126:	0c c0       	rjmp	.+24     	; 0x1140 <UART_Init+0x11c>
    1128:	8a e2       	ldi	r24, 0x2A	; 42
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	2a e2       	ldi	r18, 0x2A	; 42
    112e:	30 e0       	ldi	r19, 0x00	; 0
    1130:	f9 01       	movw	r30, r18
    1132:	20 81       	ld	r18, Z
    1134:	27 7f       	andi	r18, 0xF7	; 247
    1136:	fc 01       	movw	r30, r24
    1138:	20 83       	st	Z, r18
    113a:	02 c0       	rjmp	.+4      	; 0x1140 <UART_Init+0x11c>
    113c:	19 82       	std	Y+1, r1	; 0x01
    113e:	00 00       	nop
    1140:	8d 81       	ldd	r24, Y+5	; 0x05
    1142:	9e 81       	ldd	r25, Y+6	; 0x06
    1144:	fc 01       	movw	r30, r24
    1146:	86 81       	ldd	r24, Z+6	; 0x06
    1148:	88 2f       	mov	r24, r24
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	81 30       	cpi	r24, 0x01	; 1
    114e:	91 05       	cpc	r25, r1
    1150:	61 f0       	breq	.+24     	; 0x116a <UART_Init+0x146>
    1152:	82 30       	cpi	r24, 0x02	; 2
    1154:	91 05       	cpc	r25, r1
    1156:	81 f0       	breq	.+32     	; 0x1178 <UART_Init+0x154>
    1158:	89 2b       	or	r24, r25
    115a:	a9 f4       	brne	.+42     	; 0x1186 <UART_Init+0x162>
    115c:	8a 81       	ldd	r24, Y+2	; 0x02
    115e:	8f 7e       	andi	r24, 0xEF	; 239
    1160:	8a 83       	std	Y+2, r24	; 0x02
    1162:	8a 81       	ldd	r24, Y+2	; 0x02
    1164:	8f 7d       	andi	r24, 0xDF	; 223
    1166:	8a 83       	std	Y+2, r24	; 0x02
    1168:	10 c0       	rjmp	.+32     	; 0x118a <UART_Init+0x166>
    116a:	8a 81       	ldd	r24, Y+2	; 0x02
    116c:	8f 7e       	andi	r24, 0xEF	; 239
    116e:	8a 83       	std	Y+2, r24	; 0x02
    1170:	8a 81       	ldd	r24, Y+2	; 0x02
    1172:	80 62       	ori	r24, 0x20	; 32
    1174:	8a 83       	std	Y+2, r24	; 0x02
    1176:	09 c0       	rjmp	.+18     	; 0x118a <UART_Init+0x166>
    1178:	8a 81       	ldd	r24, Y+2	; 0x02
    117a:	80 61       	ori	r24, 0x10	; 16
    117c:	8a 83       	std	Y+2, r24	; 0x02
    117e:	8a 81       	ldd	r24, Y+2	; 0x02
    1180:	80 62       	ori	r24, 0x20	; 32
    1182:	8a 83       	std	Y+2, r24	; 0x02
    1184:	02 c0       	rjmp	.+4      	; 0x118a <UART_Init+0x166>
    1186:	19 82       	std	Y+1, r1	; 0x01
    1188:	00 00       	nop
    118a:	8d 81       	ldd	r24, Y+5	; 0x05
    118c:	9e 81       	ldd	r25, Y+6	; 0x06
    118e:	fc 01       	movw	r30, r24
    1190:	87 81       	ldd	r24, Z+7	; 0x07
    1192:	88 2f       	mov	r24, r24
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	81 30       	cpi	r24, 0x01	; 1
    1198:	91 05       	cpc	r25, r1
    119a:	19 f0       	breq	.+6      	; 0x11a2 <UART_Init+0x17e>
    119c:	02 97       	sbiw	r24, 0x02	; 2
    119e:	29 f0       	breq	.+10     	; 0x11aa <UART_Init+0x186>
    11a0:	08 c0       	rjmp	.+16     	; 0x11b2 <UART_Init+0x18e>
    11a2:	8a 81       	ldd	r24, Y+2	; 0x02
    11a4:	87 7f       	andi	r24, 0xF7	; 247
    11a6:	8a 83       	std	Y+2, r24	; 0x02
    11a8:	06 c0       	rjmp	.+12     	; 0x11b6 <UART_Init+0x192>
    11aa:	8a 81       	ldd	r24, Y+2	; 0x02
    11ac:	88 60       	ori	r24, 0x08	; 8
    11ae:	8a 83       	std	Y+2, r24	; 0x02
    11b0:	02 c0       	rjmp	.+4      	; 0x11b6 <UART_Init+0x192>
    11b2:	19 82       	std	Y+1, r1	; 0x01
    11b4:	00 00       	nop
    11b6:	8d 81       	ldd	r24, Y+5	; 0x05
    11b8:	9e 81       	ldd	r25, Y+6	; 0x06
    11ba:	fc 01       	movw	r30, r24
    11bc:	80 85       	ldd	r24, Z+8	; 0x08
    11be:	88 2f       	mov	r24, r24
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	00 97       	sbiw	r24, 0x00	; 0
    11c4:	71 f0       	breq	.+28     	; 0x11e2 <UART_Init+0x1be>
    11c6:	01 97       	sbiw	r24, 0x01	; 1
    11c8:	b1 f4       	brne	.+44     	; 0x11f6 <UART_Init+0x1d2>
    11ca:	8a e2       	ldi	r24, 0x2A	; 42
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	2a e2       	ldi	r18, 0x2A	; 42
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	f9 01       	movw	r30, r18
    11d4:	20 81       	ld	r18, Z
    11d6:	20 68       	ori	r18, 0x80	; 128
    11d8:	fc 01       	movw	r30, r24
    11da:	20 83       	st	Z, r18
    11dc:	0e 94 0e 03 	call	0x61c	; 0x61c <Interrupts_On>
    11e0:	0c c0       	rjmp	.+24     	; 0x11fa <UART_Init+0x1d6>
    11e2:	8a e2       	ldi	r24, 0x2A	; 42
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	2a e2       	ldi	r18, 0x2A	; 42
    11e8:	30 e0       	ldi	r19, 0x00	; 0
    11ea:	f9 01       	movw	r30, r18
    11ec:	20 81       	ld	r18, Z
    11ee:	2f 77       	andi	r18, 0x7F	; 127
    11f0:	fc 01       	movw	r30, r24
    11f2:	20 83       	st	Z, r18
    11f4:	02 c0       	rjmp	.+4      	; 0x11fa <UART_Init+0x1d6>
    11f6:	19 82       	std	Y+1, r1	; 0x01
    11f8:	00 00       	nop
    11fa:	80 e4       	ldi	r24, 0x40	; 64
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	2a 81       	ldd	r18, Y+2	; 0x02
    1200:	fc 01       	movw	r30, r24
    1202:	20 83       	st	Z, r18
    1204:	89 e2       	ldi	r24, 0x29	; 41
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	23 e3       	ldi	r18, 0x33	; 51
    120a:	fc 01       	movw	r30, r24
    120c:	20 83       	st	Z, r18
    120e:	89 81       	ldd	r24, Y+1	; 0x01
    1210:	26 96       	adiw	r28, 0x06	; 6
    1212:	0f b6       	in	r0, 0x3f	; 63
    1214:	f8 94       	cli
    1216:	de bf       	out	0x3e, r29	; 62
    1218:	0f be       	out	0x3f, r0	; 63
    121a:	cd bf       	out	0x3d, r28	; 61
    121c:	df 91       	pop	r29
    121e:	cf 91       	pop	r28
    1220:	1f 91       	pop	r17
    1222:	0f 91       	pop	r16
    1224:	ff 90       	pop	r15
    1226:	ef 90       	pop	r14
    1228:	08 95       	ret

0000122a <UART_Send>:
    122a:	cf 93       	push	r28
    122c:	df 93       	push	r29
    122e:	1f 92       	push	r1
    1230:	cd b7       	in	r28, 0x3d	; 61
    1232:	de b7       	in	r29, 0x3e	; 62
    1234:	89 83       	std	Y+1, r24	; 0x01
    1236:	00 00       	nop
    1238:	8b e2       	ldi	r24, 0x2B	; 43
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	fc 01       	movw	r30, r24
    123e:	80 81       	ld	r24, Z
    1240:	82 95       	swap	r24
    1242:	86 95       	lsr	r24
    1244:	87 70       	andi	r24, 0x07	; 7
    1246:	88 2f       	mov	r24, r24
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	81 70       	andi	r24, 0x01	; 1
    124c:	99 27       	eor	r25, r25
    124e:	89 2b       	or	r24, r25
    1250:	99 f3       	breq	.-26     	; 0x1238 <UART_Send+0xe>
    1252:	8c e2       	ldi	r24, 0x2C	; 44
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	29 81       	ldd	r18, Y+1	; 0x01
    1258:	fc 01       	movw	r30, r24
    125a:	20 83       	st	Z, r18
    125c:	81 e0       	ldi	r24, 0x01	; 1
    125e:	0f 90       	pop	r0
    1260:	df 91       	pop	r29
    1262:	cf 91       	pop	r28
    1264:	08 95       	ret

00001266 <UART_SendToTTL>:


uint8 UART_SendToTTL(uint32 Send_String)
{
    1266:	0f 93       	push	r16
    1268:	1f 93       	push	r17
    126a:	cf 93       	push	r28
    126c:	df 93       	push	r29
    126e:	cd b7       	in	r28, 0x3d	; 61
    1270:	de b7       	in	r29, 0x3e	; 62
    1272:	2f 97       	sbiw	r28, 0x0f	; 15
    1274:	0f b6       	in	r0, 0x3f	; 63
    1276:	f8 94       	cli
    1278:	de bf       	out	0x3e, r29	; 62
    127a:	0f be       	out	0x3f, r0	; 63
    127c:	cd bf       	out	0x3d, r28	; 61
    127e:	6c 87       	std	Y+12, r22	; 0x0c
    1280:	7d 87       	std	Y+13, r23	; 0x0d
    1282:	8e 87       	std	Y+14, r24	; 0x0e
    1284:	9f 87       	std	Y+15, r25	; 0x0f
	uint8 Send_Char[10],i;
	itoa(Send_String , Send_Char, 10);
    1286:	8c 85       	ldd	r24, Y+12	; 0x0c
    1288:	9d 85       	ldd	r25, Y+13	; 0x0d
    128a:	9e 01       	movw	r18, r28
    128c:	2e 5f       	subi	r18, 0xFE	; 254
    128e:	3f 4f       	sbci	r19, 0xFF	; 255
    1290:	4a e0       	ldi	r20, 0x0A	; 10
    1292:	50 e0       	ldi	r21, 0x00	; 0
    1294:	b9 01       	movw	r22, r18
    1296:	0e 94 08 0a 	call	0x1410	; 0x1410 <itoa>
	for( i = 0 ; i < strlen(Send_Char) ; i++)
    129a:	19 82       	std	Y+1, r1	; 0x01
    129c:	0f c0       	rjmp	.+30     	; 0x12bc <UART_SendToTTL+0x56>
	{
		UART_Send((Send_Char[i]));
    129e:	89 81       	ldd	r24, Y+1	; 0x01
    12a0:	88 2f       	mov	r24, r24
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	9e 01       	movw	r18, r28
    12a6:	2e 5f       	subi	r18, 0xFE	; 254
    12a8:	3f 4f       	sbci	r19, 0xFF	; 255
    12aa:	82 0f       	add	r24, r18
    12ac:	93 1f       	adc	r25, r19
    12ae:	fc 01       	movw	r30, r24
    12b0:	80 81       	ld	r24, Z
    12b2:	0e 94 15 09 	call	0x122a	; 0x122a <UART_Send>

uint8 UART_SendToTTL(uint32 Send_String)
{
	uint8 Send_Char[10],i;
	itoa(Send_String , Send_Char, 10);
	for( i = 0 ; i < strlen(Send_Char) ; i++)
    12b6:	89 81       	ldd	r24, Y+1	; 0x01
    12b8:	8f 5f       	subi	r24, 0xFF	; 255
    12ba:	89 83       	std	Y+1, r24	; 0x01
    12bc:	89 81       	ldd	r24, Y+1	; 0x01
    12be:	08 2f       	mov	r16, r24
    12c0:	10 e0       	ldi	r17, 0x00	; 0
    12c2:	ce 01       	movw	r24, r28
    12c4:	02 96       	adiw	r24, 0x02	; 2
    12c6:	0e 94 ff 09 	call	0x13fe	; 0x13fe <strlen>
    12ca:	08 17       	cp	r16, r24
    12cc:	19 07       	cpc	r17, r25
    12ce:	38 f3       	brcs	.-50     	; 0x129e <UART_SendToTTL+0x38>
	{
		UART_Send((Send_Char[i]));
	}
	UART_Send('-');
    12d0:	8d e2       	ldi	r24, 0x2D	; 45
    12d2:	0e 94 15 09 	call	0x122a	; 0x122a <UART_Send>
	return OK;
    12d6:	81 e0       	ldi	r24, 0x01	; 1
    12d8:	2f 96       	adiw	r28, 0x0f	; 15
    12da:	0f b6       	in	r0, 0x3f	; 63
    12dc:	f8 94       	cli
    12de:	de bf       	out	0x3e, r29	; 62
    12e0:	0f be       	out	0x3f, r0	; 63
    12e2:	cd bf       	out	0x3d, r28	; 61
    12e4:	df 91       	pop	r29
    12e6:	cf 91       	pop	r28
    12e8:	1f 91       	pop	r17
    12ea:	0f 91       	pop	r16
    12ec:	08 95       	ret

000012ee <SwDelay_ms>:
/**
 * Description: Function to make a software Delay in the Melli seconds 
 * @param NoOfMilleSeconds the number of  Melli seconds to delay
 */
void SwDelay_ms(uint32 NoOfMilleSeconds)
{
    12ee:	cf 93       	push	r28
    12f0:	df 93       	push	r29
    12f2:	cd b7       	in	r28, 0x3d	; 61
    12f4:	de b7       	in	r29, 0x3e	; 62
    12f6:	28 97       	sbiw	r28, 0x08	; 8
    12f8:	0f b6       	in	r0, 0x3f	; 63
    12fa:	f8 94       	cli
    12fc:	de bf       	out	0x3e, r29	; 62
    12fe:	0f be       	out	0x3f, r0	; 63
    1300:	cd bf       	out	0x3d, r28	; 61
    1302:	6d 83       	std	Y+5, r22	; 0x05
    1304:	7e 83       	std	Y+6, r23	; 0x06
    1306:	8f 83       	std	Y+7, r24	; 0x07
    1308:	98 87       	std	Y+8, r25	; 0x08
	sint32 counter;
	counter = NoOfMilleSeconds * (F_CPU / SECONDS_TO_MILLISECONSD_FACTOR);
    130a:	2d 81       	ldd	r18, Y+5	; 0x05
    130c:	3e 81       	ldd	r19, Y+6	; 0x06
    130e:	4f 81       	ldd	r20, Y+7	; 0x07
    1310:	58 85       	ldd	r21, Y+8	; 0x08
    1312:	80 e4       	ldi	r24, 0x40	; 64
    1314:	9f e1       	ldi	r25, 0x1F	; 31
    1316:	dc 01       	movw	r26, r24
    1318:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__muluhisi3>
    131c:	dc 01       	movw	r26, r24
    131e:	cb 01       	movw	r24, r22
    1320:	89 83       	std	Y+1, r24	; 0x01
    1322:	9a 83       	std	Y+2, r25	; 0x02
    1324:	ab 83       	std	Y+3, r26	; 0x03
    1326:	bc 83       	std	Y+4, r27	; 0x04
	while(counter > FALSE)
    1328:	0b c0       	rjmp	.+22     	; 0x1340 <SwDelay_ms+0x52>
	{
			counter =  counter - CYCLE_MELLI_DELAY_FACTOR;
    132a:	89 81       	ldd	r24, Y+1	; 0x01
    132c:	9a 81       	ldd	r25, Y+2	; 0x02
    132e:	ab 81       	ldd	r26, Y+3	; 0x03
    1330:	bc 81       	ldd	r27, Y+4	; 0x04
    1332:	09 97       	sbiw	r24, 0x09	; 9
    1334:	a1 09       	sbc	r26, r1
    1336:	b1 09       	sbc	r27, r1
    1338:	89 83       	std	Y+1, r24	; 0x01
    133a:	9a 83       	std	Y+2, r25	; 0x02
    133c:	ab 83       	std	Y+3, r26	; 0x03
    133e:	bc 83       	std	Y+4, r27	; 0x04
 */
void SwDelay_ms(uint32 NoOfMilleSeconds)
{
	sint32 counter;
	counter = NoOfMilleSeconds * (F_CPU / SECONDS_TO_MILLISECONSD_FACTOR);
	while(counter > FALSE)
    1340:	89 81       	ldd	r24, Y+1	; 0x01
    1342:	9a 81       	ldd	r25, Y+2	; 0x02
    1344:	ab 81       	ldd	r26, Y+3	; 0x03
    1346:	bc 81       	ldd	r27, Y+4	; 0x04
    1348:	18 16       	cp	r1, r24
    134a:	19 06       	cpc	r1, r25
    134c:	1a 06       	cpc	r1, r26
    134e:	1b 06       	cpc	r1, r27
    1350:	64 f3       	brlt	.-40     	; 0x132a <SwDelay_ms+0x3c>
	{
			counter =  counter - CYCLE_MELLI_DELAY_FACTOR;
	}
}
    1352:	00 00       	nop
    1354:	28 96       	adiw	r28, 0x08	; 8
    1356:	0f b6       	in	r0, 0x3f	; 63
    1358:	f8 94       	cli
    135a:	de bf       	out	0x3e, r29	; 62
    135c:	0f be       	out	0x3f, r0	; 63
    135e:	cd bf       	out	0x3d, r28	; 61
    1360:	df 91       	pop	r29
    1362:	cf 91       	pop	r28
    1364:	08 95       	ret

00001366 <__mulsi3>:
    1366:	db 01       	movw	r26, r22
    1368:	8f 93       	push	r24
    136a:	9f 93       	push	r25
    136c:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__muluhisi3>
    1370:	bf 91       	pop	r27
    1372:	af 91       	pop	r26
    1374:	a2 9f       	mul	r26, r18
    1376:	80 0d       	add	r24, r0
    1378:	91 1d       	adc	r25, r1
    137a:	a3 9f       	mul	r26, r19
    137c:	90 0d       	add	r25, r0
    137e:	b2 9f       	mul	r27, r18
    1380:	90 0d       	add	r25, r0
    1382:	11 24       	eor	r1, r1
    1384:	08 95       	ret

00001386 <__udivmodsi4>:
    1386:	a1 e2       	ldi	r26, 0x21	; 33
    1388:	1a 2e       	mov	r1, r26
    138a:	aa 1b       	sub	r26, r26
    138c:	bb 1b       	sub	r27, r27
    138e:	fd 01       	movw	r30, r26
    1390:	0d c0       	rjmp	.+26     	; 0x13ac <__udivmodsi4_ep>

00001392 <__udivmodsi4_loop>:
    1392:	aa 1f       	adc	r26, r26
    1394:	bb 1f       	adc	r27, r27
    1396:	ee 1f       	adc	r30, r30
    1398:	ff 1f       	adc	r31, r31
    139a:	a2 17       	cp	r26, r18
    139c:	b3 07       	cpc	r27, r19
    139e:	e4 07       	cpc	r30, r20
    13a0:	f5 07       	cpc	r31, r21
    13a2:	20 f0       	brcs	.+8      	; 0x13ac <__udivmodsi4_ep>
    13a4:	a2 1b       	sub	r26, r18
    13a6:	b3 0b       	sbc	r27, r19
    13a8:	e4 0b       	sbc	r30, r20
    13aa:	f5 0b       	sbc	r31, r21

000013ac <__udivmodsi4_ep>:
    13ac:	66 1f       	adc	r22, r22
    13ae:	77 1f       	adc	r23, r23
    13b0:	88 1f       	adc	r24, r24
    13b2:	99 1f       	adc	r25, r25
    13b4:	1a 94       	dec	r1
    13b6:	69 f7       	brne	.-38     	; 0x1392 <__udivmodsi4_loop>
    13b8:	60 95       	com	r22
    13ba:	70 95       	com	r23
    13bc:	80 95       	com	r24
    13be:	90 95       	com	r25
    13c0:	9b 01       	movw	r18, r22
    13c2:	ac 01       	movw	r20, r24
    13c4:	bd 01       	movw	r22, r26
    13c6:	cf 01       	movw	r24, r30
    13c8:	08 95       	ret

000013ca <__muluhisi3>:
    13ca:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <__umulhisi3>
    13ce:	a5 9f       	mul	r26, r21
    13d0:	90 0d       	add	r25, r0
    13d2:	b4 9f       	mul	r27, r20
    13d4:	90 0d       	add	r25, r0
    13d6:	a4 9f       	mul	r26, r20
    13d8:	80 0d       	add	r24, r0
    13da:	91 1d       	adc	r25, r1
    13dc:	11 24       	eor	r1, r1
    13de:	08 95       	ret

000013e0 <__umulhisi3>:
    13e0:	a2 9f       	mul	r26, r18
    13e2:	b0 01       	movw	r22, r0
    13e4:	b3 9f       	mul	r27, r19
    13e6:	c0 01       	movw	r24, r0
    13e8:	a3 9f       	mul	r26, r19
    13ea:	70 0d       	add	r23, r0
    13ec:	81 1d       	adc	r24, r1
    13ee:	11 24       	eor	r1, r1
    13f0:	91 1d       	adc	r25, r1
    13f2:	b2 9f       	mul	r27, r18
    13f4:	70 0d       	add	r23, r0
    13f6:	81 1d       	adc	r24, r1
    13f8:	11 24       	eor	r1, r1
    13fa:	91 1d       	adc	r25, r1
    13fc:	08 95       	ret

000013fe <strlen>:
    13fe:	fc 01       	movw	r30, r24
    1400:	01 90       	ld	r0, Z+
    1402:	00 20       	and	r0, r0
    1404:	e9 f7       	brne	.-6      	; 0x1400 <strlen+0x2>
    1406:	80 95       	com	r24
    1408:	90 95       	com	r25
    140a:	8e 0f       	add	r24, r30
    140c:	9f 1f       	adc	r25, r31
    140e:	08 95       	ret

00001410 <itoa>:
    1410:	45 32       	cpi	r20, 0x25	; 37
    1412:	51 05       	cpc	r21, r1
    1414:	20 f4       	brcc	.+8      	; 0x141e <itoa+0xe>
    1416:	42 30       	cpi	r20, 0x02	; 2
    1418:	10 f0       	brcs	.+4      	; 0x141e <itoa+0xe>
    141a:	0c 94 13 0a 	jmp	0x1426	; 0x1426 <__itoa_ncheck>
    141e:	fb 01       	movw	r30, r22
    1420:	10 82       	st	Z, r1
    1422:	cb 01       	movw	r24, r22
    1424:	08 95       	ret

00001426 <__itoa_ncheck>:
    1426:	bb 27       	eor	r27, r27
    1428:	4a 30       	cpi	r20, 0x0A	; 10
    142a:	31 f4       	brne	.+12     	; 0x1438 <__itoa_ncheck+0x12>
    142c:	99 23       	and	r25, r25
    142e:	22 f4       	brpl	.+8      	; 0x1438 <__itoa_ncheck+0x12>
    1430:	bd e2       	ldi	r27, 0x2D	; 45
    1432:	90 95       	com	r25
    1434:	81 95       	neg	r24
    1436:	9f 4f       	sbci	r25, 0xFF	; 255
    1438:	0c 94 1f 0a 	jmp	0x143e	; 0x143e <__utoa_common>

0000143c <__utoa_ncheck>:
    143c:	bb 27       	eor	r27, r27

0000143e <__utoa_common>:
    143e:	fb 01       	movw	r30, r22
    1440:	55 27       	eor	r21, r21
    1442:	aa 27       	eor	r26, r26
    1444:	88 0f       	add	r24, r24
    1446:	99 1f       	adc	r25, r25
    1448:	aa 1f       	adc	r26, r26
    144a:	a4 17       	cp	r26, r20
    144c:	10 f0       	brcs	.+4      	; 0x1452 <__utoa_common+0x14>
    144e:	a4 1b       	sub	r26, r20
    1450:	83 95       	inc	r24
    1452:	50 51       	subi	r21, 0x10	; 16
    1454:	b9 f7       	brne	.-18     	; 0x1444 <__utoa_common+0x6>
    1456:	a0 5d       	subi	r26, 0xD0	; 208
    1458:	aa 33       	cpi	r26, 0x3A	; 58
    145a:	08 f0       	brcs	.+2      	; 0x145e <__utoa_common+0x20>
    145c:	a9 5d       	subi	r26, 0xD9	; 217
    145e:	a1 93       	st	Z+, r26
    1460:	00 97       	sbiw	r24, 0x00	; 0
    1462:	79 f7       	brne	.-34     	; 0x1442 <__utoa_common+0x4>
    1464:	b1 11       	cpse	r27, r1
    1466:	b1 93       	st	Z+, r27
    1468:	11 92       	st	Z+, r1
    146a:	cb 01       	movw	r24, r22
    146c:	0c 94 38 0a 	jmp	0x1470	; 0x1470 <strrev>

00001470 <strrev>:
    1470:	dc 01       	movw	r26, r24
    1472:	fc 01       	movw	r30, r24
    1474:	67 2f       	mov	r22, r23
    1476:	71 91       	ld	r23, Z+
    1478:	77 23       	and	r23, r23
    147a:	e1 f7       	brne	.-8      	; 0x1474 <strrev+0x4>
    147c:	32 97       	sbiw	r30, 0x02	; 2
    147e:	04 c0       	rjmp	.+8      	; 0x1488 <strrev+0x18>
    1480:	7c 91       	ld	r23, X
    1482:	6d 93       	st	X+, r22
    1484:	70 83       	st	Z, r23
    1486:	62 91       	ld	r22, -Z
    1488:	ae 17       	cp	r26, r30
    148a:	bf 07       	cpc	r27, r31
    148c:	c8 f3       	brcs	.-14     	; 0x1480 <strrev+0x10>
    148e:	08 95       	ret

00001490 <_exit>:
    1490:	f8 94       	cli

00001492 <__stop_program>:
    1492:	ff cf       	rjmp	.-2      	; 0x1492 <__stop_program>
